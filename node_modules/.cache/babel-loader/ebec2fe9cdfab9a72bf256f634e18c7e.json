{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedValue from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nclass AnimatedAddition extends AnimatedWithChildren {\n  constructor(a, b) {\n    super();\n    this._a = typeof a === 'number' ? new AnimatedValue(a) : a;\n    this._b = typeof b === 'number' ? new AnimatedValue(b) : b;\n  }\n\n  __makeNative() {\n    this._a.__makeNative();\n\n    this._b.__makeNative();\n\n    super.__makeNative();\n  }\n\n  __getValue() {\n    return this._a.__getValue() + this._b.__getValue();\n  }\n\n  interpolate(config) {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __attach() {\n    this._a.__addChild(this);\n\n    this._b.__addChild(this);\n  }\n\n  __detach() {\n    this._a.__removeChild(this);\n\n    this._b.__removeChild(this);\n\n    super.__detach();\n  }\n\n  __getNativeConfig() {\n    return {\n      type: 'addition',\n      input: [this._a.__getNativeTag(), this._b.__getNativeTag()]\n    };\n  }\n\n}\n\nexport default AnimatedAddition;","map":{"version":3,"sources":["C:/Users/alex/Documents/GitHub/alexfox-portfolio/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedAddition.js"],"names":["AnimatedInterpolation","AnimatedNode","AnimatedValue","AnimatedWithChildren","AnimatedAddition","constructor","a","b","_a","_b","__makeNative","__getValue","interpolate","config","__attach","__addChild","__detach","__removeChild","__getNativeConfig","type","input","__getNativeTag"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAEA,MAAMC,gBAAN,SAA+BD,oBAA/B,CAAoD;AAClDE,EAAAA,WAAW,CAACC,CAAD,EAAIC,CAAJ,EAAO;AAChB;AACA,SAAKC,EAAL,GAAU,OAAOF,CAAP,KAAa,QAAb,GAAwB,IAAIJ,aAAJ,CAAkBI,CAAlB,CAAxB,GAA+CA,CAAzD;AACA,SAAKG,EAAL,GAAU,OAAOF,CAAP,KAAa,QAAb,GAAwB,IAAIL,aAAJ,CAAkBK,CAAlB,CAAxB,GAA+CA,CAAzD;AACD;;AAEDG,EAAAA,YAAY,GAAG;AACb,SAAKF,EAAL,CAAQE,YAAR;;AAEA,SAAKD,EAAL,CAAQC,YAAR;;AAEA,UAAMA,YAAN;AACD;;AAEDC,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKH,EAAL,CAAQG,UAAR,KAAuB,KAAKF,EAAL,CAAQE,UAAR,EAA9B;AACD;;AAEDC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,WAAO,IAAIb,qBAAJ,CAA0B,IAA1B,EAAgCa,MAAhC,CAAP;AACD;;AAEDC,EAAAA,QAAQ,GAAG;AACT,SAAKN,EAAL,CAAQO,UAAR,CAAmB,IAAnB;;AAEA,SAAKN,EAAL,CAAQM,UAAR,CAAmB,IAAnB;AACD;;AAEDC,EAAAA,QAAQ,GAAG;AACT,SAAKR,EAAL,CAAQS,aAAR,CAAsB,IAAtB;;AAEA,SAAKR,EAAL,CAAQQ,aAAR,CAAsB,IAAtB;;AAEA,UAAMD,QAAN;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,WAAO;AACLC,MAAAA,IAAI,EAAE,UADD;AAELC,MAAAA,KAAK,EAAE,CAAC,KAAKZ,EAAL,CAAQa,cAAR,EAAD,EAA2B,KAAKZ,EAAL,CAAQY,cAAR,EAA3B;AAFF,KAAP;AAID;;AA1CiD;;AA8CpD,eAAejB,gBAAf","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedValue from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nclass AnimatedAddition extends AnimatedWithChildren {\n  constructor(a, b) {\n    super();\n    this._a = typeof a === 'number' ? new AnimatedValue(a) : a;\n    this._b = typeof b === 'number' ? new AnimatedValue(b) : b;\n  }\n\n  __makeNative() {\n    this._a.__makeNative();\n\n    this._b.__makeNative();\n\n    super.__makeNative();\n  }\n\n  __getValue() {\n    return this._a.__getValue() + this._b.__getValue();\n  }\n\n  interpolate(config) {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __attach() {\n    this._a.__addChild(this);\n\n    this._b.__addChild(this);\n  }\n\n  __detach() {\n    this._a.__removeChild(this);\n\n    this._b.__removeChild(this);\n\n    super.__detach();\n  }\n\n  __getNativeConfig() {\n    return {\n      type: 'addition',\n      input: [this._a.__getNativeTag(), this._b.__getNativeTag()]\n    };\n  }\n\n}\n\nexport default AnimatedAddition;"]},"metadata":{},"sourceType":"module"}