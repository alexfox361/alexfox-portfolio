{"ast":null,"code":"// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nfunction createLruCache(maxCacheSize) {\n  if (maxCacheSize < 1) {\n    return {\n      get: function get() {\n        return undefined;\n      },\n      set: function set() {}\n    };\n  }\n\n  var cacheSize = 0;\n  var cache = new Map();\n  var previousCache = new Map();\n\n  function update(key, value) {\n    cache.set(key, value);\n    cacheSize++;\n\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  }\n\n  return {\n    get: function get(key) {\n      var value = cache.get(key);\n\n      if (value !== undefined) {\n        return value;\n      }\n\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n    set: function set(key, value) {\n      if (cache.has(key)) {\n        cache.set(key, value);\n      } else {\n        update(key, value);\n      }\n    }\n  };\n}\n\nexport { createLruCache };","map":{"version":3,"sources":["../../src/lib/lru-cache.ts"],"names":["maxCacheSize","get","set","cacheSize","cache","previousCache","value","update","key"],"mappings":"AAOA;AACM,SAAA,cAAA,CAAA,YAAA,EAAyD;AAC3D,MAAIA,YAAY,GAAhB,CAAA,EAAsB;AAClB,WAAO;AACHC,MAAAA,GAAG,EAAE,SAAA,GAAA,GAAA;AAAA,eAAA,SAAA;AADF,OAAA;AAEHC,MAAAA,GAAG,EAAE,SAAA,GAAA,GAAK,CAAG;AAFV,KAAP;AAIH;;AAED,MAAIC,SAAS,GAAb,CAAA;AACA,MAAIC,KAAK,GAAG,IAAZ,GAAY,EAAZ;AACA,MAAIC,aAAa,GAAG,IAApB,GAAoB,EAApB;;AAEA,WAAA,MAAA,CAAA,GAAA,EAAA,KAAA,EAAsC;AAClCD,IAAAA,KAAK,CAALA,GAAAA,CAAAA,GAAAA,EAAAA,KAAAA;AACAD,IAAAA,SAAS;;AAET,QAAIA,SAAS,GAAb,YAAA,EAA8B;AAC1BA,MAAAA,SAAS,GAATA,CAAAA;AACAE,MAAAA,aAAa,GAAbA,KAAAA;AACAD,MAAAA,KAAK,GAAG,IAARA,GAAQ,EAARA;AACH;AACJ;;AAED,SAAO;AACHH,IAAAA,GADG,EAAA,SAAA,GAAA,CAAA,GAAA,EACI;AACH,UAAIK,KAAK,GAAGF,KAAK,CAALA,GAAAA,CAAZ,GAAYA,CAAZ;;AAEA,UAAIE,KAAK,KAAT,SAAA,EAAyB;AACrB,eAAA,KAAA;AACH;;AACD,UAAI,CAACA,KAAK,GAAGD,aAAa,CAAbA,GAAAA,CAAT,GAASA,CAAT,MAAJ,SAAA,EAAoD;AAChDE,QAAAA,MAAM,CAAA,GAAA,EAANA,KAAM,CAANA;AACA,eAAA,KAAA;AACH;AAVF,KAAA;AAYHL,IAAAA,GAZG,EAYCM,SAAAA,GAAAA,CAZD,GAYCA,EAZD,KAYCA,EAAU;AACV,UAAIJ,KAAK,CAALA,GAAAA,CAAJ,GAAIA,CAAJ,EAAoB;AAChBA,QAAAA,KAAK,CAALA,GAAAA,CAAAA,GAAAA,EAAAA,KAAAA;AADJ,OAAA,MAEO;AACHG,QAAAA,MAAM,CAAA,GAAA,EAANA,KAAM,CAANA;AACH;AACJ;AAlBE,GAAP;AAoBH","sourcesContent":["// Export is needed because TypeScript complains about an error otherwise:\n// Error: …/tailwind-merge/src/config-utils.ts(8,17): semantic error TS4058: Return type of exported function has or is using name 'LruCache' from external module \"…/tailwind-merge/src/lru-cache\" but cannot be named.\nexport interface LruCache<Key, Value> {\n    get(key: Key): Value | undefined\n    set(key: Key, value: Value): void\n}\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nexport function createLruCache<Key, Value>(maxCacheSize: number): LruCache<Key, Value> {\n    if (maxCacheSize < 1) {\n        return {\n            get: () => undefined,\n            set: () => {},\n        }\n    }\n\n    let cacheSize = 0\n    let cache = new Map<Key, Value>()\n    let previousCache = new Map<Key, Value>()\n\n    function update(key: Key, value: Value) {\n        cache.set(key, value)\n        cacheSize++\n\n        if (cacheSize > maxCacheSize) {\n            cacheSize = 0\n            previousCache = cache\n            cache = new Map()\n        }\n    }\n\n    return {\n        get(key) {\n            let value = cache.get(key)\n\n            if (value !== undefined) {\n                return value\n            }\n            if ((value = previousCache.get(key)) !== undefined) {\n                update(key, value)\n                return value\n            }\n        },\n        set(key, value) {\n            if (cache.has(key)) {\n                cache.set(key, value)\n            } else {\n                update(key, value)\n            }\n        },\n    }\n}\n"]},"metadata":{},"sourceType":"module"}