{"ast":null,"code":"/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar clipboardAvailable;\nexport default class Clipboard {\n  static isAvailable() {\n    if (clipboardAvailable === undefined) {\n      clipboardAvailable = typeof document.queryCommandSupported === 'function' && document.queryCommandSupported('copy');\n    }\n\n    return clipboardAvailable;\n  }\n\n  static getString() {\n    return Promise.resolve('');\n  }\n\n  static setString(text) {\n    var success = false;\n    var body = document.body;\n\n    if (body) {\n      // add the text to a hidden node\n      var node = document.createElement('span');\n      node.textContent = text;\n      node.style.opacity = '0';\n      node.style.position = 'absolute';\n      node.style.whiteSpace = 'pre-wrap';\n      node.style.userSelect = 'auto';\n      body.appendChild(node); // select the text\n\n      var selection = window.getSelection();\n      selection.removeAllRanges();\n      var range = document.createRange();\n      range.selectNodeContents(node);\n      selection.addRange(range); // attempt to copy\n\n      try {\n        document.execCommand('copy');\n        success = true;\n      } catch (e) {} // remove selection and node\n\n\n      selection.removeAllRanges();\n      body.removeChild(node);\n    }\n\n    return success;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/alex/Documents/GitHub/alexfox-portfolio/node_modules/react-native-web/dist/exports/Clipboard/index.js"],"names":["clipboardAvailable","Clipboard","isAvailable","undefined","document","queryCommandSupported","getString","Promise","resolve","setString","text","success","body","node","createElement","textContent","style","opacity","position","whiteSpace","userSelect","appendChild","selection","window","getSelection","removeAllRanges","range","createRange","selectNodeContents","addRange","execCommand","e","removeChild"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,kBAAJ;AACA,eAAe,MAAMC,SAAN,CAAgB;AACX,SAAXC,WAAW,GAAG;AACnB,QAAIF,kBAAkB,KAAKG,SAA3B,EAAsC;AACpCH,MAAAA,kBAAkB,GAAG,OAAOI,QAAQ,CAACC,qBAAhB,KAA0C,UAA1C,IAAwDD,QAAQ,CAACC,qBAAT,CAA+B,MAA/B,CAA7E;AACD;;AAED,WAAOL,kBAAP;AACD;;AAEe,SAATM,SAAS,GAAG;AACjB,WAAOC,OAAO,CAACC,OAAR,CAAgB,EAAhB,CAAP;AACD;;AAEe,SAATC,SAAS,CAACC,IAAD,EAAO;AACrB,QAAIC,OAAO,GAAG,KAAd;AACA,QAAIC,IAAI,GAAGR,QAAQ,CAACQ,IAApB;;AAEA,QAAIA,IAAJ,EAAU;AACR;AACA,UAAIC,IAAI,GAAGT,QAAQ,CAACU,aAAT,CAAuB,MAAvB,CAAX;AACAD,MAAAA,IAAI,CAACE,WAAL,GAAmBL,IAAnB;AACAG,MAAAA,IAAI,CAACG,KAAL,CAAWC,OAAX,GAAqB,GAArB;AACAJ,MAAAA,IAAI,CAACG,KAAL,CAAWE,QAAX,GAAsB,UAAtB;AACAL,MAAAA,IAAI,CAACG,KAAL,CAAWG,UAAX,GAAwB,UAAxB;AACAN,MAAAA,IAAI,CAACG,KAAL,CAAWI,UAAX,GAAwB,MAAxB;AACAR,MAAAA,IAAI,CAACS,WAAL,CAAiBR,IAAjB,EARQ,CAQgB;;AAExB,UAAIS,SAAS,GAAGC,MAAM,CAACC,YAAP,EAAhB;AACAF,MAAAA,SAAS,CAACG,eAAV;AACA,UAAIC,KAAK,GAAGtB,QAAQ,CAACuB,WAAT,EAAZ;AACAD,MAAAA,KAAK,CAACE,kBAAN,CAAyBf,IAAzB;AACAS,MAAAA,SAAS,CAACO,QAAV,CAAmBH,KAAnB,EAdQ,CAcmB;;AAE3B,UAAI;AACFtB,QAAAA,QAAQ,CAAC0B,WAAT,CAAqB,MAArB;AACAnB,QAAAA,OAAO,GAAG,IAAV;AACD,OAHD,CAGE,OAAOoB,CAAP,EAAU,CAAE,CAnBN,CAmBO;;;AAGfT,MAAAA,SAAS,CAACG,eAAV;AACAb,MAAAA,IAAI,CAACoB,WAAL,CAAiBnB,IAAjB;AACD;;AAED,WAAOF,OAAP;AACD;;AA5C4B","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar clipboardAvailable;\nexport default class Clipboard {\n  static isAvailable() {\n    if (clipboardAvailable === undefined) {\n      clipboardAvailable = typeof document.queryCommandSupported === 'function' && document.queryCommandSupported('copy');\n    }\n\n    return clipboardAvailable;\n  }\n\n  static getString() {\n    return Promise.resolve('');\n  }\n\n  static setString(text) {\n    var success = false;\n    var body = document.body;\n\n    if (body) {\n      // add the text to a hidden node\n      var node = document.createElement('span');\n      node.textContent = text;\n      node.style.opacity = '0';\n      node.style.position = 'absolute';\n      node.style.whiteSpace = 'pre-wrap';\n      node.style.userSelect = 'auto';\n      body.appendChild(node); // select the text\n\n      var selection = window.getSelection();\n      selection.removeAllRanges();\n      var range = document.createRange();\n      range.selectNodeContents(node);\n      selection.addRange(range); // attempt to copy\n\n      try {\n        document.execCommand('copy');\n        success = true;\n      } catch (e) {} // remove selection and node\n\n\n      selection.removeAllRanges();\n      body.removeChild(node);\n    }\n\n    return success;\n  }\n\n}"]},"metadata":{},"sourceType":"module"}