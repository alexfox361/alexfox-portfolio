{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport AnimatedValue from '../nodes/AnimatedValue';\nimport AnimatedValueXY from '../nodes/AnimatedValueXY';\nimport AnimatedInterpolation from '../nodes/AnimatedInterpolation';\nimport Animation from './Animation';\nimport { shouldUseNativeDriver } from '../NativeAnimatedHelper';\nimport Easing from '../../../../exports/Easing';\n\nvar _easeInOut;\n\nfunction easeInOut() {\n  if (!_easeInOut) {\n    _easeInOut = Easing.inOut(Easing.ease);\n  }\n\n  return _easeInOut;\n}\n\nclass TimingAnimation extends Animation {\n  constructor(config) {\n    var _config$easing, _config$duration, _config$delay, _config$iterations, _config$isInteraction;\n\n    super();\n    this._toValue = config.toValue;\n    this._easing = (_config$easing = config.easing) !== null && _config$easing !== void 0 ? _config$easing : easeInOut();\n    this._duration = (_config$duration = config.duration) !== null && _config$duration !== void 0 ? _config$duration : 500;\n    this._delay = (_config$delay = config.delay) !== null && _config$delay !== void 0 ? _config$delay : 0;\n    this.__iterations = (_config$iterations = config.iterations) !== null && _config$iterations !== void 0 ? _config$iterations : 1;\n    this._useNativeDriver = shouldUseNativeDriver(config);\n    this.__isInteraction = (_config$isInteraction = config.isInteraction) !== null && _config$isInteraction !== void 0 ? _config$isInteraction : !this._useNativeDriver;\n  }\n\n  __getNativeAnimationConfig() {\n    var frameDuration = 1000.0 / 60.0;\n    var frames = [];\n    var numFrames = Math.round(this._duration / frameDuration);\n\n    for (var frame = 0; frame < numFrames; frame++) {\n      frames.push(this._easing(frame / numFrames));\n    }\n\n    frames.push(this._easing(1));\n    return {\n      type: 'frames',\n      frames,\n      toValue: this._toValue,\n      iterations: this.__iterations\n    };\n  }\n\n  start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n    this.__active = true;\n    this._fromValue = fromValue;\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n\n    var start = () => {\n      // Animations that sometimes have 0 duration and sometimes do not\n      // still need to use the native driver when duration is 0 so as to\n      // not cause intermixed JS and native animations.\n      if (this._duration === 0 && !this._useNativeDriver) {\n        this._onUpdate(this._toValue);\n\n        this.__debouncedOnEnd({\n          finished: true\n        });\n      } else {\n        this._startTime = Date.now();\n\n        if (this._useNativeDriver) {\n          this.__startNativeAnimation(animatedValue);\n        } else {\n          this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n        }\n      }\n    };\n\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  }\n\n  onUpdate() {\n    var now = Date.now();\n\n    if (now >= this._startTime + this._duration) {\n      if (this._duration === 0) {\n        this._onUpdate(this._toValue);\n      } else {\n        this._onUpdate(this._fromValue + this._easing(1) * (this._toValue - this._fromValue));\n      }\n\n      this.__debouncedOnEnd({\n        finished: true\n      });\n\n      return;\n    }\n\n    this._onUpdate(this._fromValue + this._easing((now - this._startTime) / this._duration) * (this._toValue - this._fromValue));\n\n    if (this.__active) {\n      this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n    }\n  }\n\n  stop() {\n    super.stop();\n    this.__active = false;\n    clearTimeout(this._timeout);\n    global.cancelAnimationFrame(this._animationFrame);\n\n    this.__debouncedOnEnd({\n      finished: false\n    });\n  }\n\n}\n\nexport default TimingAnimation;","map":{"version":3,"sources":["C:/Users/alex/Documents/GitHub/alexfox-portfolio/node_modules/react-native-web/dist/vendor/react-native/Animated/animations/TimingAnimation.js"],"names":["AnimatedValue","AnimatedValueXY","AnimatedInterpolation","Animation","shouldUseNativeDriver","Easing","_easeInOut","easeInOut","inOut","ease","TimingAnimation","constructor","config","_config$easing","_config$duration","_config$delay","_config$iterations","_config$isInteraction","_toValue","toValue","_easing","easing","_duration","duration","_delay","delay","__iterations","iterations","_useNativeDriver","__isInteraction","isInteraction","__getNativeAnimationConfig","frameDuration","frames","numFrames","Math","round","frame","push","type","start","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","__active","_fromValue","_onUpdate","__onEnd","__debouncedOnEnd","finished","_startTime","Date","now","__startNativeAnimation","_animationFrame","requestAnimationFrame","bind","_timeout","setTimeout","stop","clearTimeout","global","cancelAnimationFrame"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport AnimatedValue from '../nodes/AnimatedValue';\nimport AnimatedValueXY from '../nodes/AnimatedValueXY';\nimport AnimatedInterpolation from '../nodes/AnimatedInterpolation';\nimport Animation from './Animation';\nimport { shouldUseNativeDriver } from '../NativeAnimatedHelper';\nimport Easing from '../../../../exports/Easing';\n\nvar _easeInOut;\n\nfunction easeInOut() {\n  if (!_easeInOut) {\n    _easeInOut = Easing.inOut(Easing.ease);\n  }\n\n  return _easeInOut;\n}\n\nclass TimingAnimation extends Animation {\n  constructor(config) {\n    var _config$easing, _config$duration, _config$delay, _config$iterations, _config$isInteraction;\n\n    super();\n    this._toValue = config.toValue;\n    this._easing = (_config$easing = config.easing) !== null && _config$easing !== void 0 ? _config$easing : easeInOut();\n    this._duration = (_config$duration = config.duration) !== null && _config$duration !== void 0 ? _config$duration : 500;\n    this._delay = (_config$delay = config.delay) !== null && _config$delay !== void 0 ? _config$delay : 0;\n    this.__iterations = (_config$iterations = config.iterations) !== null && _config$iterations !== void 0 ? _config$iterations : 1;\n    this._useNativeDriver = shouldUseNativeDriver(config);\n    this.__isInteraction = (_config$isInteraction = config.isInteraction) !== null && _config$isInteraction !== void 0 ? _config$isInteraction : !this._useNativeDriver;\n  }\n\n  __getNativeAnimationConfig() {\n    var frameDuration = 1000.0 / 60.0;\n    var frames = [];\n    var numFrames = Math.round(this._duration / frameDuration);\n\n    for (var frame = 0; frame < numFrames; frame++) {\n      frames.push(this._easing(frame / numFrames));\n    }\n\n    frames.push(this._easing(1));\n    return {\n      type: 'frames',\n      frames,\n      toValue: this._toValue,\n      iterations: this.__iterations\n    };\n  }\n\n  start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n    this.__active = true;\n    this._fromValue = fromValue;\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n\n    var start = () => {\n      // Animations that sometimes have 0 duration and sometimes do not\n      // still need to use the native driver when duration is 0 so as to\n      // not cause intermixed JS and native animations.\n      if (this._duration === 0 && !this._useNativeDriver) {\n        this._onUpdate(this._toValue);\n\n        this.__debouncedOnEnd({\n          finished: true\n        });\n      } else {\n        this._startTime = Date.now();\n\n        if (this._useNativeDriver) {\n          this.__startNativeAnimation(animatedValue);\n        } else {\n          this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n        }\n      }\n    };\n\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  }\n\n  onUpdate() {\n    var now = Date.now();\n\n    if (now >= this._startTime + this._duration) {\n      if (this._duration === 0) {\n        this._onUpdate(this._toValue);\n      } else {\n        this._onUpdate(this._fromValue + this._easing(1) * (this._toValue - this._fromValue));\n      }\n\n      this.__debouncedOnEnd({\n        finished: true\n      });\n\n      return;\n    }\n\n    this._onUpdate(this._fromValue + this._easing((now - this._startTime) / this._duration) * (this._toValue - this._fromValue));\n\n    if (this.__active) {\n      this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n    }\n  }\n\n  stop() {\n    super.stop();\n    this.__active = false;\n    clearTimeout(this._timeout);\n    global.cancelAnimationFrame(this._animationFrame);\n\n    this.__debouncedOnEnd({\n      finished: false\n    });\n  }\n\n}\n\nexport default TimingAnimation;"]},"metadata":{},"sourceType":"module"}