{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nclass AnimatedDiffClamp extends AnimatedWithChildren {\n  constructor(a, min, max) {\n    super();\n    this._a = a;\n    this._min = min;\n    this._max = max;\n    this._value = this._lastValue = this._a.__getValue();\n  }\n\n  __makeNative() {\n    this._a.__makeNative();\n\n    super.__makeNative();\n  }\n\n  interpolate(config) {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __getValue() {\n    var value = this._a.__getValue();\n\n    var diff = value - this._lastValue;\n    this._lastValue = value;\n    this._value = Math.min(Math.max(this._value + diff, this._min), this._max);\n    return this._value;\n  }\n\n  __attach() {\n    this._a.__addChild(this);\n  }\n\n  __detach() {\n    this._a.__removeChild(this);\n\n    super.__detach();\n  }\n\n  __getNativeConfig() {\n    return {\n      type: 'diffclamp',\n      input: this._a.__getNativeTag(),\n      min: this._min,\n      max: this._max\n    };\n  }\n\n}\n\nexport default AnimatedDiffClamp;","map":{"version":3,"sources":["C:/Users/alex/Documents/GitHub/alexfox-portfolio/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedDiffClamp.js"],"names":["AnimatedInterpolation","AnimatedNode","AnimatedWithChildren","AnimatedDiffClamp","constructor","a","min","max","_a","_min","_max","_value","_lastValue","__getValue","__makeNative","interpolate","config","value","diff","Math","__attach","__addChild","__detach","__removeChild","__getNativeConfig","type","input","__getNativeTag"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAEA,MAAMC,iBAAN,SAAgCD,oBAAhC,CAAqD;AACnDE,EAAAA,WAAW,CAACC,CAAD,EAAIC,GAAJ,EAASC,GAAT,EAAc;AACvB;AACA,SAAKC,EAAL,GAAUH,CAAV;AACA,SAAKI,IAAL,GAAYH,GAAZ;AACA,SAAKI,IAAL,GAAYH,GAAZ;AACA,SAAKI,MAAL,GAAc,KAAKC,UAAL,GAAkB,KAAKJ,EAAL,CAAQK,UAAR,EAAhC;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACb,SAAKN,EAAL,CAAQM,YAAR;;AAEA,UAAMA,YAAN;AACD;;AAEDC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,WAAO,IAAIhB,qBAAJ,CAA0B,IAA1B,EAAgCgB,MAAhC,CAAP;AACD;;AAEDH,EAAAA,UAAU,GAAG;AACX,QAAII,KAAK,GAAG,KAAKT,EAAL,CAAQK,UAAR,EAAZ;;AAEA,QAAIK,IAAI,GAAGD,KAAK,GAAG,KAAKL,UAAxB;AACA,SAAKA,UAAL,GAAkBK,KAAlB;AACA,SAAKN,MAAL,GAAcQ,IAAI,CAACb,GAAL,CAASa,IAAI,CAACZ,GAAL,CAAS,KAAKI,MAAL,GAAcO,IAAvB,EAA6B,KAAKT,IAAlC,CAAT,EAAkD,KAAKC,IAAvD,CAAd;AACA,WAAO,KAAKC,MAAZ;AACD;;AAEDS,EAAAA,QAAQ,GAAG;AACT,SAAKZ,EAAL,CAAQa,UAAR,CAAmB,IAAnB;AACD;;AAEDC,EAAAA,QAAQ,GAAG;AACT,SAAKd,EAAL,CAAQe,aAAR,CAAsB,IAAtB;;AAEA,UAAMD,QAAN;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,WAAO;AACLC,MAAAA,IAAI,EAAE,WADD;AAELC,MAAAA,KAAK,EAAE,KAAKlB,EAAL,CAAQmB,cAAR,EAFF;AAGLrB,MAAAA,GAAG,EAAE,KAAKG,IAHL;AAILF,MAAAA,GAAG,EAAE,KAAKG;AAJL,KAAP;AAMD;;AA7CkD;;AAiDrD,eAAeP,iBAAf","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nclass AnimatedDiffClamp extends AnimatedWithChildren {\n  constructor(a, min, max) {\n    super();\n    this._a = a;\n    this._min = min;\n    this._max = max;\n    this._value = this._lastValue = this._a.__getValue();\n  }\n\n  __makeNative() {\n    this._a.__makeNative();\n\n    super.__makeNative();\n  }\n\n  interpolate(config) {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __getValue() {\n    var value = this._a.__getValue();\n\n    var diff = value - this._lastValue;\n    this._lastValue = value;\n    this._value = Math.min(Math.max(this._value + diff, this._min), this._max);\n    return this._value;\n  }\n\n  __attach() {\n    this._a.__addChild(this);\n  }\n\n  __detach() {\n    this._a.__removeChild(this);\n\n    super.__detach();\n  }\n\n  __getNativeConfig() {\n    return {\n      type: 'diffclamp',\n      input: this._a.__getNativeTag(),\n      min: this._min,\n      max: this._max\n    };\n  }\n\n}\n\nexport default AnimatedDiffClamp;"]},"metadata":{},"sourceType":"module"}