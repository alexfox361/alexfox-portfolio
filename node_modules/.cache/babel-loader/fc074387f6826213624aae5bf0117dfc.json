{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return combineMerge;\n  }\n});\n\nvar _deepmerge = _interopRequireDefault(require(\"deepmerge\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction combineMerge(target, source, options) {\n  var destination = target.slice();\n  source.forEach(function (item, index) {\n    if (typeof destination[index] === \"undefined\") {\n      destination[index] = options.cloneUnlessOtherwiseSpecified(item, options);\n    } else if (options.isMergeableObject(item)) {\n      destination[index] = (0, _deepmerge.default)(target[index], item, options);\n    } else if (target.indexOf(item) === -1) {\n      destination.push(item);\n    }\n  });\n  return destination;\n}","map":{"version":3,"sources":["C:/Users/alex/Documents/GitHub/alexfox-portfolio/node_modules/@material-tailwind/react/utils/combineMerge.js"],"names":["Object","defineProperty","exports","value","enumerable","get","combineMerge","_deepmerge","_interopRequireDefault","require","obj","__esModule","default","target","source","options","destination","slice","forEach","item","index","cloneUnlessOtherwiseSpecified","isMergeableObject","indexOf","push"],"mappings":"AAAA;;AAAaA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA8B,YAA9B,EAA2C;AAACC,EAAAA,KAAK,EAAC;AAAP,CAA3C;AAAyDH,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA8B,SAA9B,EAAwC;AAACE,EAAAA,UAAU,EAAC,IAAZ;AAAiBC,EAAAA,GAAG,EAAC,YAAU;AAAC,WAAOC,YAAP;AAAoB;AAApD,CAAxC;;AAA+F,IAAIC,UAAU,GAACC,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAArC;;AAA4D,SAASD,sBAAT,CAAgCE,GAAhC,EAAoC;AAAC,SAAOA,GAAG,IAAEA,GAAG,CAACC,UAAT,GAAoBD,GAApB,GAAwB;AAACE,IAAAA,OAAO,EAACF;AAAT,GAA/B;AAA6C;;AAAA,SAASJ,YAAT,CAAsBO,MAAtB,EAA6BC,MAA7B,EAAoCC,OAApC,EAA4C;AAAC,MAAIC,WAAW,GAACH,MAAM,CAACI,KAAP,EAAhB;AAA+BH,EAAAA,MAAM,CAACI,OAAP,CAAe,UAASC,IAAT,EAAcC,KAAd,EAAoB;AAAC,QAAG,OAAOJ,WAAW,CAACI,KAAD,CAAlB,KAA4B,WAA/B,EAA2C;AAACJ,MAAAA,WAAW,CAACI,KAAD,CAAX,GAAmBL,OAAO,CAACM,6BAAR,CAAsCF,IAAtC,EAA2CJ,OAA3C,CAAnB;AAAuE,KAAnH,MAAwH,IAAGA,OAAO,CAACO,iBAAR,CAA0BH,IAA1B,CAAH,EAAmC;AAACH,MAAAA,WAAW,CAACI,KAAD,CAAX,GAAmB,CAAC,GAAEb,UAAU,CAACK,OAAd,EAAuBC,MAAM,CAACO,KAAD,CAA7B,EAAqCD,IAArC,EAA0CJ,OAA1C,CAAnB;AAAsE,KAA1G,MAA+G,IAAGF,MAAM,CAACU,OAAP,CAAeJ,IAAf,MAAuB,CAAC,CAA3B,EAA6B;AAACH,MAAAA,WAAW,CAACQ,IAAZ,CAAiBL,IAAjB;AAAuB;AAAC,GAAjU;AAAmU,SAAOH,WAAP;AAAmB","sourcesContent":["\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});Object.defineProperty(exports,\"default\",{enumerable:true,get:function(){return combineMerge}});var _deepmerge=_interopRequireDefault(require(\"deepmerge\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function combineMerge(target,source,options){var destination=target.slice();source.forEach(function(item,index){if(typeof destination[index]===\"undefined\"){destination[index]=options.cloneUnlessOtherwiseSpecified(item,options)}else if(options.isMergeableObject(item)){destination[index]=(0,_deepmerge.default)(target[index],item,options)}else if(target.indexOf(item)===-1){destination.push(item)}});return destination}"]},"metadata":{},"sourceType":"script"}