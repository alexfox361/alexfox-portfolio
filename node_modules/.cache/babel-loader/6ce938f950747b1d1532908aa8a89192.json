{"ast":null,"code":"import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport Batchinator from '../Batchinator';\nimport FillRateHelper from '../FillRateHelper';\nimport findNodeHandle from '../../../exports/findNodeHandle';\nimport RefreshControl from '../../../exports/RefreshControl';\nimport ScrollView from '../../../exports/ScrollView';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport View from '../../../exports/View';\nimport ViewabilityHelper from '../ViewabilityHelper';\nvar flattenStyle = StyleSheet.flatten;\nimport infoLog from '../infoLog';\nimport invariant from 'fbjs/lib/invariant';\nimport { keyExtractor as defaultKeyExtractor, computeWindowedRenderLimits } from '../VirtualizeUtils';\nimport * as React from 'react';\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from './VirtualizedListContext.js';\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n// horizontalOrDefault(this.props.horizontal)\n\nfunction horizontalOrDefault(horizontal) {\n  return horizontal !== null && horizontal !== void 0 ? horizontal : false;\n} // initialNumToRenderOrDefault(this.props.initialNumToRenderOrDefault)\n\n\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender !== null && initialNumToRender !== void 0 ? initialNumToRender : 10;\n} // maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\n\n\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch !== null && maxToRenderPerBatch !== void 0 ? maxToRenderPerBatch : 10;\n} // onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\n\n\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold !== null && onEndReachedThreshold !== void 0 ? onEndReachedThreshold : 2;\n} // scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\n\n\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle !== null && scrollEventThrottle !== void 0 ? scrollEventThrottle : 50;\n} // windowSizeOrDefault(this.props.windowSize)\n\n\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize !== null && windowSize !== void 0 ? windowSize : 21;\n}\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\n\n\nclass VirtualizedList extends React.PureComponent {\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params) {\n    var animated = params ? params.animated : true;\n    var veryLast = this.props.getItemCount(this.props.data) - 1;\n\n    var frame = this._getFrameMetricsApprox(veryLast);\n\n    var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  } // scrollToIndex may be janky without getItemLayout prop\n\n\n  scrollToIndex(params) {\n    var _this$props = this.props,\n        data = _this$props.data,\n        horizontal = _this$props.horizontal,\n        getItemCount = _this$props.getItemCount,\n        getItemLayout = _this$props.getItemLayout,\n        onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n    var animated = params.animated,\n        index = params.index,\n        viewOffset = params.viewOffset,\n        viewPosition = params.viewPosition;\n    invariant(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n    invariant(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n    invariant(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index\n      });\n      return;\n    }\n\n    var frame = this._getFrameMetricsApprox(index);\n\n    var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(horizontal ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  } // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n\n\n  scrollToItem(params) {\n    var item = params.item;\n    var _this$props2 = this.props,\n        data = _this$props2.data,\n        getItem = _this$props2.getItem,\n        getItemCount = _this$props2.getItemCount;\n    var itemCount = getItemCount(data);\n\n    for (var _index = 0; _index < itemCount; _index++) {\n      if (getItem(data, _index) === item) {\n        this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n          index: _index\n        }));\n        break;\n      }\n    }\n  }\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n\n\n  scrollToOffset(params) {\n    var animated = params.animated,\n        offset = params.offset;\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n\n    this._updateViewableItems(this.props.data);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n\n\n  getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef() {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  _getCellKey() {\n    var _this$context;\n\n    return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n  }\n\n  _getListKey() {\n    return this.props.listKey || this._getCellKey();\n  }\n\n  _getDebugInfo() {\n    var _this$context2;\n\n    return {\n      listKey: this._getListKey(),\n      cellKey: this._getCellKey(),\n      horizontal: horizontalOrDefault(this.props.horizontal),\n      parent: (_this$context2 = this.context) == null ? void 0 : _this$context2.debugInfo\n    };\n  }\n\n  hasMore() {\n    return this._hasMore;\n  }\n\n  constructor(_props) {\n    var _this$props$updateCel;\n\n    super(_props);\n\n    this._getScrollMetrics = () => {\n      return this._scrollMetrics;\n    };\n\n    this._getOutermostParentListRef = () => {\n      if (this._isNestedWithSameOrientation()) {\n        return this.context.getOutermostParentListRef();\n      } else {\n        return this;\n      }\n    };\n\n    this._getNestedChildState = key => {\n      var existingChildData = this._nestedChildLists.get(key);\n\n      return existingChildData && existingChildData.state;\n    };\n\n    this._registerAsNestedChild = childList => {\n      // Register the mapping between this child key and the cellKey for its cell\n      var childListsInCell = this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n      childListsInCell.add(childList.key);\n\n      this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n      var existingChildData = this._nestedChildLists.get(childList.key);\n\n      if (existingChildData && existingChildData.ref !== null) {\n        console.error('A VirtualizedList contains a cell which itself contains ' + 'more than one VirtualizedList of the same orientation as the parent ' + 'list. You must pass a unique listKey prop to each sibling list.\\n\\n' + describeNestedLists(_objectSpread(_objectSpread({}, childList), {}, {\n          // We're called from the child's componentDidMount, so it's safe to\n          // read the child's props here (albeit weird).\n          horizontal: !!childList.ref.props.horizontal\n        })));\n      }\n\n      this._nestedChildLists.set(childList.key, {\n        ref: childList.ref,\n        state: null\n      });\n\n      if (this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n\n    this._unregisterAsNestedChild = childList => {\n      this._nestedChildLists.set(childList.key, {\n        ref: null,\n        state: childList.state\n      });\n    };\n\n    this._onUpdateSeparators = (keys, newProps) => {\n      keys.forEach(key => {\n        var ref = key != null && this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n\n    this._getSpacerKey = isVertical => isVertical ? 'height' : 'width';\n\n    this._averageCellLength = 0;\n    this._cellKeysToChildListKeys = new Map();\n    this._cellRefs = {};\n    this._frames = {};\n    this._footerLength = 0;\n    this._hasDoneInitialScroll = false;\n    this._hasInteracted = false;\n    this._hasMore = false;\n    this._hasWarned = {};\n    this._headerLength = 0;\n    this._hiPriInProgress = false;\n    this._highestMeasuredFrameIndex = 0;\n    this._indicesToKeys = new Map();\n    this._nestedChildLists = new Map();\n    this._offsetFromParentVirtualizedList = 0;\n    this._prevParentOffset = 0;\n    this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0\n    };\n    this._scrollRef = null;\n    this._sentEndForContentLength = 0;\n    this._totalCellLength = 0;\n    this._totalCellsMeasured = 0;\n    this._viewabilityTuples = [];\n\n    this._captureScrollRef = ref => {\n      this._scrollRef = ref;\n    };\n\n    this._defaultRenderScrollComponent = props => {\n      var onRefresh = props.onRefresh;\n\n      if (this._isNestedWithSameOrientation()) {\n        // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n        return /*#__PURE__*/React.createElement(View, props);\n      } else if (onRefresh) {\n        var _props$refreshing;\n\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) !== null && _props$refreshing !== void 0 ? _props$refreshing : 'undefined') + '`');\n        return (\n          /*#__PURE__*/\n          // $FlowFixMe[prop-missing] Invalid prop usage\n          React.createElement(ScrollView, _extends({}, props, {\n            refreshControl: props.refreshControl == null ? /*#__PURE__*/React.createElement(RefreshControl, {\n              refreshing: props.refreshing,\n              onRefresh: onRefresh,\n              progressViewOffset: props.progressViewOffset\n            }) : props.refreshControl\n          }))\n        );\n      } else {\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        return /*#__PURE__*/React.createElement(ScrollView, props);\n      }\n    };\n\n    this._onCellUnmount = cellKey => {\n      var curr = this._frames[cellKey];\n\n      if (curr) {\n        this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n\n    this._onLayout = e => {\n      if (this._isNestedWithSameOrientation()) {\n        // Need to adjust our scroll metrics to be relative to our containing\n        // VirtualizedList before we can make claims about list item viewability\n        this.measureLayoutRelativeToContainingList();\n      } else {\n        this._scrollMetrics.visibleLength = this._selectLength(e.nativeEvent.layout);\n      }\n\n      this.props.onLayout && this.props.onLayout(e);\n\n      this._scheduleCellsToRenderUpdate();\n\n      this._maybeCallOnEndReached();\n    };\n\n    this._onLayoutEmpty = e => {\n      this.props.onLayout && this.props.onLayout(e);\n    };\n\n    this._onLayoutFooter = e => {\n      this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n\n      this._footerLength = this._selectLength(e.nativeEvent.layout);\n    };\n\n    this._onLayoutHeader = e => {\n      this._headerLength = this._selectLength(e.nativeEvent.layout);\n    };\n\n    this._onContentSizeChange = (width, height) => {\n      if (width > 0 && height > 0 && this.props.initialScrollIndex != null && this.props.initialScrollIndex > 0 && !this._hasDoneInitialScroll) {\n        if (this.props.contentOffset == null) {\n          this.scrollToIndex({\n            animated: false,\n            index: this.props.initialScrollIndex\n          });\n        }\n\n        this._hasDoneInitialScroll = true;\n      }\n\n      if (this.props.onContentSizeChange) {\n        this.props.onContentSizeChange(width, height);\n      }\n\n      this._scrollMetrics.contentLength = this._selectLength({\n        height,\n        width\n      });\n\n      this._scheduleCellsToRenderUpdate();\n\n      this._maybeCallOnEndReached();\n    };\n\n    this._convertParentScrollMetrics = metrics => {\n      // Offset of the top of the nested list relative to the top of its parent's viewport\n      var offset = metrics.offset - this._offsetFromParentVirtualizedList; // Child's visible length is the same as its parent's\n\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - this._scrollMetrics.offset;\n      var contentLength = this._scrollMetrics.contentLength;\n      return {\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset\n      };\n    };\n\n    this._onScroll = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScroll(e);\n      });\n\n      if (this.props.onScroll) {\n        this.props.onScroll(e);\n      }\n\n      var timestamp = e.timeStamp;\n\n      var visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n\n      var contentLength = this._selectLength(e.nativeEvent.contentSize);\n\n      var offset = this._selectOffset(e.nativeEvent.contentOffset);\n\n      var dOffset = offset - this._scrollMetrics.offset;\n\n      if (this._isNestedWithSameOrientation()) {\n        if (this._scrollMetrics.contentLength === 0) {\n          // Ignore scroll events until onLayout has been called and we\n          // know our offset from our offset from our parent\n          return;\n        }\n\n        var _this$_convertParentS = this._convertParentScrollMetrics({\n          visibleLength,\n          offset\n        });\n\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n\n      var dt = this._scrollMetrics.timestamp ? Math.max(1, timestamp - this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n\n      if (dt > 500 && this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt,\n          prevDt: this._scrollMetrics.dt,\n          contentLength\n        });\n        this._hasWarned.perf = true;\n      }\n\n      this._scrollMetrics = {\n        contentLength,\n        dt,\n        dOffset,\n        offset,\n        timestamp,\n        velocity,\n        visibleLength\n      };\n\n      this._updateViewableItems(this.props.data);\n\n      if (!this.props) {\n        return;\n      }\n\n      this._maybeCallOnEndReached();\n\n      if (velocity !== 0) {\n        this._fillRateHelper.activate();\n      }\n\n      this._computeBlankness();\n\n      this._scheduleCellsToRenderUpdate();\n    };\n\n    this._onScrollBeginDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScrollBeginDrag(e);\n      });\n\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n\n      this._hasInteracted = true;\n      this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n    };\n\n    this._onScrollEndDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScrollEndDrag(e);\n      });\n\n      var velocity = e.nativeEvent.velocity;\n\n      if (velocity) {\n        this._scrollMetrics.velocity = this._selectOffset(velocity);\n      }\n\n      this._computeBlankness();\n\n      this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n    };\n\n    this._onMomentumScrollBegin = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onMomentumScrollBegin(e);\n      });\n\n      this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n    };\n\n    this._onMomentumScrollEnd = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onMomentumScrollEnd(e);\n      });\n\n      this._scrollMetrics.velocity = 0;\n\n      this._computeBlankness();\n\n      this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n    };\n\n    this._updateCellsToRender = () => {\n      var _this$props3 = this.props,\n          data = _this$props3.data,\n          getItemCount = _this$props3.getItemCount,\n          _onEndReachedThreshold = _this$props3.onEndReachedThreshold;\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(_onEndReachedThreshold);\n\n      var isVirtualizationDisabled = this._isVirtualizationDisabled();\n\n      this._updateViewableItems(data);\n\n      if (!data) {\n        return;\n      }\n\n      this.setState(state => {\n        var newState;\n        var _this$_scrollMetrics = this._scrollMetrics,\n            contentLength = _this$_scrollMetrics.contentLength,\n            offset = _this$_scrollMetrics.offset,\n            visibleLength = _this$_scrollMetrics.visibleLength;\n\n        if (!isVirtualizationDisabled) {\n          // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n          // and wipe out the initialNumToRender rendered elements.\n          // So let's wait until the scroll view metrics have been set up. And until then,\n          // we will trust the initialNumToRender suggestion\n          if (visibleLength > 0 && contentLength > 0) {\n            // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n            // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n            // So let's wait until we've scrolled the view to the right place. And until then,\n            // we will trust the initialScrollIndex suggestion.\n            if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n              newState = computeWindowedRenderLimits(this.props.data, this.props.getItemCount, maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch), windowSizeOrDefault(this.props.windowSize), state, this._getFrameMetricsApprox, this._scrollMetrics);\n            }\n          }\n        } else {\n          var distanceFromEnd = contentLength - visibleLength - offset;\n          var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch) : 0;\n          newState = {\n            first: 0,\n            last: Math.min(state.last + renderAhead, getItemCount(data) - 1)\n          };\n        }\n\n        if (newState && this._nestedChildLists.size > 0) {\n          var newFirst = newState.first;\n          var newLast = newState.last; // If some cell in the new state has a child list in it, we should only render\n          // up through that item, so that we give that list a chance to render.\n          // Otherwise there's churn from multiple child lists mounting and un-mounting\n          // their items.\n\n          for (var ii = newFirst; ii <= newLast; ii++) {\n            var cellKeyForIndex = this._indicesToKeys.get(ii);\n\n            var childListKeys = cellKeyForIndex && this._cellKeysToChildListKeys.get(cellKeyForIndex);\n\n            if (!childListKeys) {\n              continue;\n            }\n\n            var someChildHasMore = false; // For each cell, need to check whether any child list in it has more elements to render\n\n            for (var _iterator = _createForOfIteratorHelperLoose(childListKeys), _step; !(_step = _iterator()).done;) {\n              var childKey = _step.value;\n\n              var childList = this._nestedChildLists.get(childKey);\n\n              if (childList && childList.ref && childList.ref.hasMore()) {\n                someChildHasMore = true;\n                break;\n              }\n            }\n\n            if (someChildHasMore) {\n              // $FlowFixMe[incompatible-use] The newState definitely exists past \"if (newState &&\"\n              newState.last = ii;\n              break;\n            }\n          }\n        }\n\n        if (newState != null && newState.first === state.first && newState.last === state.last) {\n          newState = null;\n        }\n\n        return newState;\n      });\n    };\n\n    this._createViewToken = (index, isViewable) => {\n      var _this$props4 = this.props,\n          data = _this$props4.data,\n          getItem = _this$props4.getItem;\n      var item = getItem(data, index);\n      return {\n        index,\n        item,\n        key: this._keyExtractor(item, index),\n        isViewable\n      };\n    };\n\n    this._getFrameMetricsApprox = index => {\n      var frame = this._getFrameMetrics(index);\n\n      if (frame && frame.index === index) {\n        // check for invalid frames due to row re-ordering\n        return frame;\n      } else {\n        var getItemLayout = this.props.getItemLayout;\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: this._averageCellLength,\n          offset: this._averageCellLength * index\n        };\n      }\n    };\n\n    this._getFrameMetrics = index => {\n      var _this$props5 = this.props,\n          data = _this$props5.data,\n          getItem = _this$props5.getItem,\n          getItemCount = _this$props5.getItemCount,\n          getItemLayout = _this$props5.getItemLayout;\n      invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n\n      var frame = item && this._frames[this._keyExtractor(item, index)];\n\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          frame = getItemLayout(data, index);\n        }\n      }\n      /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.63 was deployed. To see the error\n       * delete this comment and run Flow. */\n\n\n      return frame;\n    };\n\n    invariant( // $FlowFixMe[prop-missing]\n    !_props.onScroll || !_props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(windowSizeOrDefault(_props.windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(this._updateCellsToRender, (_this$props$updateCel = this.props.updateCellsBatchingPeriod) !== null && _this$props$updateCel !== void 0 ? _this$props$updateCel : 50);\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(pair => ({\n        viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n        onViewableItemsChanged: pair.onViewableItemsChanged\n      }));\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        // $FlowFixMe[incompatible-call]\n        onViewableItemsChanged: this.props.onViewableItemsChanged\n      });\n    }\n\n    var initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last: Math.min(this.props.getItemCount(this.props.data), (this.props.initialScrollIndex || 0) + initialNumToRenderOrDefault(this.props.initialNumToRender)) - 1\n    };\n\n    if (this._isNestedWithSameOrientation()) {\n      var storedState = this.context.getNestedChildState(this._getListKey());\n\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    // For issue https://github.com/necolas/react-native-web/issues/995\n\n\n    this.invertedWheelEventHandler = ev => {\n      if (this.props.inverted && this._scrollRef && this._scrollRef.getScrollableNode) {\n        var node = this._scrollRef.getScrollableNode();\n\n        if (this.props.horizontal) {\n          node.scrollLeft -= ev.deltaX || ev.wheelDeltaX;\n        } else {\n          node.scrollTop -= ev.deltaY || ev.wheelDeltaY;\n        }\n\n        ev.preventDefault();\n      }\n    };\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this._getListKey(),\n        ref: this,\n        // NOTE: When the child mounts (here) it's not necessarily safe to read\n        // the parent's props. This is why we explicitly propagate debugInfo\n        // \"down\" via context and \"up\" again via this method call on the\n        // parent.\n        parentDebugInfo: this.context.debugInfo\n      });\n    } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n    this.setupWebWheelHandler();\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({\n        key: this._getListKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames\n        }\n      });\n    }\n\n    this._updateViewableItems(null);\n\n    this._updateCellsToRenderBatcher.dispose({\n      abort: true\n    });\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n\n    this._fillRateHelper.deactivateAndFlush(); // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n    this.teardownWebWheelHandler();\n  } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n  setupWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().addEventListener('wheel', this.invertedWheelEventHandler);\n    } else {\n      setTimeout(() => this.setupWebWheelHandler(), 50);\n      return;\n    }\n  } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n  teardownWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().removeEventListener('wheel', this.invertedWheelEventHandler);\n    }\n  }\n\n  static getDerivedStateFromProps(newProps, prevState) {\n    var data = newProps.data,\n        getItemCount = newProps.getItemCount;\n    var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(newProps.maxToRenderPerBatch); // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n\n    return {\n      first: Math.max(0, Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch)),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1))\n    };\n  }\n\n  _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n    var _this = this;\n\n    var _this$props6 = this.props,\n        CellRendererComponent = _this$props6.CellRendererComponent,\n        ItemSeparatorComponent = _this$props6.ItemSeparatorComponent,\n        data = _this$props6.data,\n        getItem = _this$props6.getItem,\n        getItemCount = _this$props6.getItemCount,\n        horizontal = _this$props6.horizontal;\n    var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    var end = getItemCount(data) - 1;\n    var prevCellKey;\n    last = Math.min(end, last);\n\n    var _loop = function _loop(ii) {\n      var item = getItem(data, ii);\n\n      var key = _this._keyExtractor(item, ii);\n\n      _this._indicesToKeys.set(ii, key);\n\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n\n      cells.push( /*#__PURE__*/React.createElement(CellRenderer, {\n        CellRendererComponent: CellRendererComponent,\n        ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n        cellKey: key,\n        fillRateHelper: _this._fillRateHelper,\n        horizontal: horizontal,\n        index: ii,\n        inversionStyle: inversionStyle,\n        item: item,\n        key: key,\n        prevCellKey: prevCellKey,\n        onUpdateSeparators: _this._onUpdateSeparators,\n        onLayout: e => _this._onCellLayout(e, key, ii),\n        onUnmount: _this._onCellUnmount,\n        parentProps: _this.props,\n        ref: _ref => {\n          _this._cellRefs[key] = _ref;\n        }\n      }));\n      prevCellKey = key;\n    };\n\n    for (var ii = first; ii <= last; ii++) {\n      _loop(ii);\n    }\n  }\n\n  _isVirtualizationDisabled() {\n    return this.props.disableVirtualization || false;\n  }\n\n  _isNestedWithSameOrientation() {\n    var nestedContext = this.context;\n    return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n  }\n\n  _keyExtractor(item, index) {\n    if (this.props.keyExtractor != null) {\n      return this.props.keyExtractor(item, index);\n    }\n\n    var key = defaultKeyExtractor(item, index);\n\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n\n    return key;\n  }\n\n  render() {\n    if (__DEV__) {\n      var flatStyles = flattenStyle(this.props.contentContainerStyle);\n\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n      }\n    }\n\n    var _this$props7 = this.props,\n        ListEmptyComponent = _this$props7.ListEmptyComponent,\n        ListFooterComponent = _this$props7.ListFooterComponent,\n        ListHeaderComponent = _this$props7.ListHeaderComponent;\n    var _this$props8 = this.props,\n        data = _this$props8.data,\n        horizontal = _this$props8.horizontal;\n\n    var isVirtualizationDisabled = this._isVirtualizationDisabled();\n\n    var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n    var cells = [];\n    var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    var stickyHeaderIndices = [];\n\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n\n      var element = /*#__PURE__*/React.isValidElement(ListHeaderComponent) ? ListHeaderComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListHeaderComponent, null);\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getCellKey() + '-header',\n        key: \"$header\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutHeader,\n        style: StyleSheet.compose(inversionStyle, this.props.ListHeaderComponentStyle)\n      }, // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      element)));\n    }\n\n    var itemCount = this.props.getItemCount(data);\n\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n\n      var spacerKey = this._getSpacerKey(!horizontal);\n\n      var lastInitialIndex = this.props.initialScrollIndex ? -1 : initialNumToRenderOrDefault(this.props.initialNumToRender) - 1;\n      var _this$state = this.state,\n          first = _this$state.first,\n          last = _this$state.last;\n\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);\n\n      var firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        var insertedStickySpacer = false;\n\n        if (stickyIndicesFromProps.size > 0) {\n          var stickyOffset = ListHeaderComponent ? 1 : 0; // See if there are any sticky headers in the virtualized space that we need to render.\n\n          for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              var initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n              var stickyBlock = this._getFrameMetricsApprox(ii);\n\n              var leadSpace = stickyBlock.offset - initBlock.offset - (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push( /*#__PURE__*/React.createElement(View, {\n                key: \"$sticky_lead\",\n                style: {\n                  [spacerKey]: leadSpace\n                }\n              }));\n\n              this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);\n\n              var trailSpace = this._getFrameMetricsApprox(first).offset - (stickyBlock.offset + stickyBlock.length);\n              cells.push( /*#__PURE__*/React.createElement(View, {\n                key: \"$sticky_trail\",\n                style: {\n                  [spacerKey]: trailSpace\n                }\n              }));\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n\n        if (!insertedStickySpacer) {\n          var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n          var firstSpace = this._getFrameMetricsApprox(first).offset - (_initBlock.offset + _initBlock.length);\n\n          cells.push( /*#__PURE__*/React.createElement(View, {\n            key: \"$lead_spacer\",\n            style: {\n              [spacerKey]: firstSpace\n            }\n          }));\n        }\n      }\n\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, last, inversionStyle);\n\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n        this._hasWarned.keys = true;\n      }\n\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        var lastFrame = this._getFrameMetricsApprox(last); // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n\n\n        var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n\n        var endFrame = this._getFrameMetricsApprox(end);\n\n        var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);\n        cells.push( /*#__PURE__*/React.createElement(View, {\n          key: \"$tail_spacer\",\n          style: {\n            [spacerKey]: tailSpacerLength\n          }\n        }));\n      }\n    } else if (ListEmptyComponent) {\n      var _element = /*#__PURE__*/React.isValidElement(ListEmptyComponent) ? ListEmptyComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListEmptyComponent, null);\n\n      cells.push( /*#__PURE__*/React.cloneElement(_element, {\n        key: '$empty',\n        onLayout: event => {\n          this._onLayoutEmpty(event);\n\n          if (_element.props.onLayout) {\n            _element.props.onLayout(event);\n          }\n        },\n        style: StyleSheet.compose(inversionStyle, _element.props.style)\n      }));\n    }\n\n    if (ListFooterComponent) {\n      var _element2 = /*#__PURE__*/React.isValidElement(ListFooterComponent) ? ListFooterComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListFooterComponent, null);\n\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getFooterCellKey(),\n        key: \"$footer\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutFooter,\n        style: StyleSheet.compose(inversionStyle, this.props.ListFooterComponentStyle)\n      }, // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      _element2)));\n    }\n\n    var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n      // TODO: Android support\n      invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n    });\n\n    this._hasMore = this.state.last < this.props.getItemCount(this.props.data) - 1;\n    var innerRet = /*#__PURE__*/React.createElement(VirtualizedListContextProvider, {\n      value: {\n        cellKey: null,\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: horizontalOrDefault(this.props.horizontal),\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild,\n        debugInfo: this._getDebugInfo()\n      }\n    }, /*#__PURE__*/React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n      ref: this._captureScrollRef\n    }, cells));\n    var ret = innerRet;\n    /* https://github.com/necolas/react-native-web/issues/2239: Re-enable when ScrollView.Context.Consumer is available.\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }*/\n\n    if (this.props.debug) {\n      return /*#__PURE__*/React.createElement(View, {\n        style: styles.debug\n      }, ret, this._renderDebugOverlay());\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    var _this$props9 = this.props,\n        data = _this$props9.data,\n        extraData = _this$props9.extraData;\n\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    } // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n\n\n    var hiPriInProgress = this._hiPriInProgress;\n\n    this._scheduleCellsToRenderUpdate(); // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n\n\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);\n  }\n\n  _onCellLayout(e, cellKey, index) {\n    var layout = e.nativeEvent.layout;\n    var next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true\n    };\n    var curr = this._frames[cellKey];\n\n    if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n\n    this._computeBlankness();\n\n    this._updateViewableItems(this.props.data);\n  }\n\n  _triggerRemeasureForChildListsInCell(cellKey) {\n    var childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n\n    if (childListKeys) {\n      for (var _iterator2 = _createForOfIteratorHelperLoose(childListKeys), _step2; !(_step2 = _iterator2()).done;) {\n        var childKey = _step2.value;\n\n        var childList = this._nestedChildLists.get(childKey);\n\n        childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n  }\n\n  measureLayoutRelativeToContainingList() {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      } // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n\n\n      this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), (x, y, width, height) => {\n        this._offsetFromParentVirtualizedList = this._selectOffset({\n          x,\n          y\n        });\n        this._scrollMetrics.contentLength = this._selectLength({\n          width,\n          height\n        });\n\n        var scrollMetrics = this._convertParentScrollMetrics(this.context.getScrollMetrics());\n\n        var metricsChanged = this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || this._scrollMetrics.offset !== scrollMetrics.offset;\n\n        if (metricsChanged) {\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          this._scrollMetrics.offset = scrollMetrics.offset; // If metrics of the scrollView changed, then we triggered remeasure for child list\n          // to ensure VirtualizedList has the right information.\n\n          this._cellKeysToChildListKeys.forEach(childListKeys => {\n            if (childListKeys) {\n              for (var _iterator3 = _createForOfIteratorHelperLoose(childListKeys), _step3; !(_step3 = _iterator3()).done;) {\n                var childKey = _step3.value;\n\n                var childList = this._nestedChildLists.get(childKey);\n\n                childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n              }\n            }\n          });\n        }\n      }, error => {\n        console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n      });\n    } catch (error) {\n      console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n    }\n  }\n\n  _getFooterCellKey() {\n    return this._getCellKey() + '-footer';\n  }\n\n  _renderDebugOverlay() {\n    var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n    var framesInLayout = [];\n    var itemCount = this.props.getItemCount(this.props.data);\n\n    for (var ii = 0; ii < itemCount; ii++) {\n      var frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n\n\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n\n    var windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n\n    var frameLast = this._getFrameMetricsApprox(this.state.last);\n\n    var windowLen = frameLast.offset + frameLast.length - windowTop;\n    var visTop = this._scrollMetrics.offset;\n    var visLen = this._scrollMetrics.visibleLength;\n    return /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlay]\n    }, framesInLayout.map((f, ii) => /*#__PURE__*/React.createElement(View, {\n      key: 'f' + ii,\n      style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n        top: f.offset * normalize,\n        height: f.length * normalize\n      }]\n    })), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n        top: windowTop * normalize,\n        height: windowLen * normalize\n      }]\n    }), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n        top: visTop * normalize,\n        height: visLen * normalize\n      }]\n    }));\n  }\n\n  _selectLength(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n  }\n\n  _selectOffset(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    var _this$props10 = this.props,\n        data = _this$props10.data,\n        getItemCount = _this$props10.getItemCount,\n        onEndReached = _this$props10.onEndReached,\n        onEndReachedThreshold = _this$props10.onEndReachedThreshold;\n    var _this$_scrollMetrics2 = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics2.contentLength,\n        visibleLength = _this$_scrollMetrics2.visibleLength,\n        offset = _this$_scrollMetrics2.offset;\n    var distanceFromEnd = contentLength - visibleLength - offset;\n    var threshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : 2;\n\n    if (onEndReached && this.state.last === getItemCount(data) - 1 && distanceFromEnd < threshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n      // Only call onEndReached once for a given content length\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({\n        distanceFromEnd\n      });\n    } else if (distanceFromEnd > threshold) {\n      // If the user scrolls away from the end and back again cause\n      // an onEndReached to be triggered again\n      this._sentEndForContentLength = 0;\n    }\n  }\n\n  _scheduleCellsToRenderUpdate() {\n    var _this$state2 = this.state,\n        first = _this$state2.first,\n        last = _this$state2.last;\n    var _this$_scrollMetrics3 = this._scrollMetrics,\n        offset = _this$_scrollMetrics3.offset,\n        visibleLength = _this$_scrollMetrics3.visibleLength,\n        velocity = _this$_scrollMetrics3.velocity;\n    var itemCount = this.props.getItemCount(this.props.data);\n    var hiPri = false;\n    var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n    var scrollingThreshold = onEndReachedThreshold * visibleLength / 2; // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n\n    if (first > 0) {\n      var distTop = offset - this._getFrameMetricsApprox(first).offset;\n\n      hiPri = hiPri || distTop < 0 || velocity < -2 && distTop < scrollingThreshold;\n    } // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n\n\n    if (last < itemCount - 1) {\n      var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri = hiPri || distBottom < 0 || velocity > 2 && distBottom < scrollingThreshold;\n    } // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n\n\n    if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n      this._hiPriInProgress = true; // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n\n      this._updateCellsToRender();\n\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _updateViewableItems(data) {\n    var getItemCount = this.props.getItemCount;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(getItemCount(data), this._scrollMetrics.offset, this._scrollMetrics.visibleLength, this._getFrameMetrics, this._createViewToken, tuple.onViewableItemsChanged, this.state);\n    });\n  }\n\n}\n\nVirtualizedList.contextType = VirtualizedListContext;\n\nclass CellRenderer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: this.props.item\n      }\n    };\n    this._separators = {\n      highlight: () => {\n        var _this$props11 = this.props,\n            cellKey = _this$props11.cellKey,\n            prevCellKey = _this$props11.prevCellKey;\n        this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: () => {\n        var _this$props12 = this.props,\n            cellKey = _this$props12.cellKey,\n            prevCellKey = _this$props12.prevCellKey;\n        this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: (select, newProps) => {\n        var _this$props13 = this.props,\n            cellKey = _this$props13.cellKey,\n            prevCellKey = _this$props13.prevCellKey;\n        this.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);\n      }\n    };\n  }\n\n  static getDerivedStateFromProps(props, prevState) {\n    return {\n      separatorProps: _objectSpread(_objectSpread({}, prevState.separatorProps), {}, {\n        leadingItem: props.item\n      })\n    };\n  } // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n\n\n  updateSeparatorProps(newProps) {\n    this.setState(state => ({\n      separatorProps: _objectSpread(_objectSpread({}, state.separatorProps), newProps)\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  _renderElement(renderItem, ListItemComponent, item, index) {\n    if (renderItem && ListItemComponent) {\n      console.warn('VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' + ' precedence over renderItem.');\n    }\n\n    if (ListItemComponent) {\n      /* $FlowFixMe[not-a-component] (>=0.108.0 site=react_native_fb) This\n       * comment suppresses an error found when Flow v0.108 was deployed. To\n       * see the error, delete this comment and run Flow. */\n\n      /* $FlowFixMe[incompatible-type-arg] (>=0.108.0 site=react_native_fb)\n       * This comment suppresses an error found when Flow v0.108 was deployed.\n       * To see the error, delete this comment and run Flow. */\n      return /*#__PURE__*/React.createElement(ListItemComponent, {\n        item,\n        index,\n        separators: this._separators\n      });\n    }\n\n    if (renderItem) {\n      return renderItem({\n        item,\n        index,\n        separators: this._separators\n      });\n    }\n\n    invariant(false, 'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.');\n  }\n\n  render() {\n    var _this$props14 = this.props,\n        CellRendererComponent = _this$props14.CellRendererComponent,\n        ItemSeparatorComponent = _this$props14.ItemSeparatorComponent,\n        fillRateHelper = _this$props14.fillRateHelper,\n        horizontal = _this$props14.horizontal,\n        item = _this$props14.item,\n        index = _this$props14.index,\n        inversionStyle = _this$props14.inversionStyle,\n        parentProps = _this$props14.parentProps;\n    var renderItem = parentProps.renderItem,\n        getItemLayout = parentProps.getItemLayout,\n        ListItemComponent = parentProps.ListItemComponent;\n\n    var element = this._renderElement(renderItem, ListItemComponent, item, index);\n\n    var onLayout =\n    /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n     * suppresses an error found when Flow v0.68 was deployed. To see the\n     * error delete this comment and run Flow. */\n    getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout; // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n\n    var itemSeparator = ItemSeparatorComponent && /*#__PURE__*/React.createElement(ItemSeparatorComponent, this.state.separatorProps);\n    var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n    var result = !CellRendererComponent ?\n    /*#__PURE__*/\n\n    /* $FlowFixMe[incompatible-type-arg] (>=0.89.0 site=react_native_fb) *\n      This comment suppresses an error found when Flow v0.89 was deployed. *\n      To see the error, delete this comment and run Flow. */\n    React.createElement(View, {\n      style: cellStyle,\n      onLayout: onLayout\n    }, element, itemSeparator) : /*#__PURE__*/React.createElement(CellRendererComponent, _extends({}, this.props, {\n      style: cellStyle,\n      onLayout: onLayout\n    }), element, itemSeparator);\n    return /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n      cellKey: this.props.cellKey\n    }, result);\n  }\n\n}\n\nfunction describeNestedLists(childList) {\n  var trace = 'VirtualizedList trace:\\n' + (\"  Child (\" + (childList.horizontal ? 'horizontal' : 'vertical') + \"):\\n\") + (\"    listKey: \" + childList.key + \"\\n\") + (\"    cellKey: \" + childList.cellKey);\n  var debugInfo = childList.parentDebugInfo;\n\n  while (debugInfo) {\n    trace += \"\\n  Parent (\" + (debugInfo.horizontal ? 'horizontal' : 'vertical') + \"):\\n\" + (\"    listKey: \" + debugInfo.listKey + \"\\n\") + (\"    cellKey: \" + debugInfo.cellKey);\n    debugInfo = debugInfo.parent;\n  }\n\n  return trace;\n}\n\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nexport default VirtualizedList;","map":{"version":3,"sources":["C:/Users/alex/Documents/GitHub/alexfox-portfolio/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js"],"names":["_createForOfIteratorHelperLoose","_extends","_objectSpread","Batchinator","FillRateHelper","findNodeHandle","RefreshControl","ScrollView","StyleSheet","View","ViewabilityHelper","flattenStyle","flatten","infoLog","invariant","keyExtractor","defaultKeyExtractor","computeWindowedRenderLimits","React","VirtualizedListCellContextProvider","VirtualizedListContext","VirtualizedListContextProvider","__DEV__","process","env","NODE_ENV","_usedIndexForKey","_keylessItemComponentName","horizontalOrDefault","horizontal","initialNumToRenderOrDefault","initialNumToRender","maxToRenderPerBatchOrDefault","maxToRenderPerBatch","onEndReachedThresholdOrDefault","onEndReachedThreshold","scrollEventThrottleOrDefault","scrollEventThrottle","windowSizeOrDefault","windowSize","VirtualizedList","PureComponent","scrollToEnd","params","animated","veryLast","props","getItemCount","data","frame","_getFrameMetricsApprox","offset","Math","max","length","_footerLength","_scrollMetrics","visibleLength","_scrollRef","scrollTo","console","warn","x","y","scrollToIndex","_this$props","getItemLayout","onScrollToIndexFailed","index","viewOffset","viewPosition","_highestMeasuredFrameIndex","averageItemLength","_averageCellLength","highestMeasuredFrameIndex","scrollToItem","item","_this$props2","getItem","itemCount","_index","scrollToOffset","recordInteraction","_nestedChildLists","forEach","childList","ref","_viewabilityTuples","t","viewabilityHelper","_updateViewableItems","flashScrollIndicators","getScrollResponder","getScrollableNode","getScrollRef","setNativeProps","_getCellKey","_this$context","context","cellKey","_getListKey","listKey","_getDebugInfo","_this$context2","parent","debugInfo","hasMore","_hasMore","constructor","_props","_this$props$updateCel","_getScrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","getOutermostParentListRef","_getNestedChildState","key","existingChildData","get","state","_registerAsNestedChild","childListsInCell","_cellKeysToChildListKeys","Set","add","set","error","describeNestedLists","_hasInteracted","_unregisterAsNestedChild","_onUpdateSeparators","keys","newProps","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","Map","_frames","_hasDoneInitialScroll","_hasWarned","_headerLength","_hiPriInProgress","_indicesToKeys","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","timestamp","velocity","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","createElement","_props$refreshing","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellUnmount","curr","inLayout","_onLayout","e","measureLayoutRelativeToContainingList","_selectLength","nativeEvent","layout","onLayout","_scheduleCellsToRenderUpdate","_maybeCallOnEndReached","_onLayoutEmpty","_onLayoutFooter","_triggerRemeasureForChildListsInCell","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","contentOffset","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_selectOffset","_this$_convertParentS","perf","prevDt","_fillRateHelper","activate","_computeBlankness","_onScrollBeginDrag","tuple","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","_this$props3","_onEndReachedThreshold","isVirtualizationDisabled","_isVirtualizationDisabled","setState","newState","_this$_scrollMetrics","distanceFromEnd","renderAhead","first","last","min","size","newFirst","newLast","ii","cellKeyForIndex","childListKeys","someChildHasMore","_iterator","_step","done","childKey","value","_createViewToken","isViewable","_this$props4","_keyExtractor","_getFrameMetrics","_this$props5","__isNative","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","push","initialState","storedState","getNestedChildState","frames","invertedWheelEventHandler","ev","inverted","node","scrollLeft","deltaX","wheelDeltaX","scrollTop","deltaY","wheelDeltaY","preventDefault","componentDidMount","registerAsNestedChild","parentDebugInfo","setupWebWheelHandler","componentWillUnmount","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","teardownWebWheelHandler","addEventListener","setTimeout","removeEventListener","getDerivedStateFromProps","prevState","_pushCells","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","_this","_this$props6","CellRendererComponent","ItemSeparatorComponent","stickyOffset","ListHeaderComponent","end","prevCellKey","_loop","has","CellRenderer","undefined","fillRateHelper","onUpdateSeparators","_onCellLayout","onUnmount","parentProps","_ref","disableVirtualization","nestedContext","String","type","displayName","render","flatStyles","contentContainerStyle","flexWrap","_this$props7","ListEmptyComponent","ListFooterComponent","_this$props8","styles","horizontallyInverted","verticallyInverted","element","isValidElement","style","compose","ListHeaderComponentStyle","spacerKey","lastInitialIndex","_this$state","firstAfterInitial","insertedStickySpacer","initBlock","stickyBlock","leadSpace","trailSpace","_initBlock","firstSpace","lastFrame","endFrame","tailSpacerLength","_element","cloneElement","event","_element2","ListFooterComponentStyle","scrollProps","invertStickyHeaders","innerRet","getScrollMetrics","renderScrollComponent","ret","debug","_renderDebugOverlay","componentDidUpdate","prevProps","_this$props9","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","next","_iterator2","_step2","measureLayout","scrollMetrics","metricsChanged","_iterator3","_step3","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","_this$props10","onEndReached","_this$_scrollMetrics2","threshold","_this$state2","_this$_scrollMetrics3","hiPri","scrollingThreshold","distTop","distBottom","schedule","onUpdate","contextType","Component","arguments","separatorProps","highlighted","leadingItem","_separators","highlight","_this$props11","unhighlight","_this$props12","updateProps","select","_this$props13","_renderElement","renderItem","ListItemComponent","separators","_this$props14","enabled","itemSeparator","cellStyle","rowReverse","columnReverse","row","result","trace","create","transform","scaleY","scaleX","flexDirection","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor"],"mappings":"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","sourcesContent":["import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\nimport Batchinator from '../Batchinator';\nimport FillRateHelper from '../FillRateHelper';\nimport findNodeHandle from '../../../exports/findNodeHandle';\nimport RefreshControl from '../../../exports/RefreshControl';\nimport ScrollView from '../../../exports/ScrollView';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport View from '../../../exports/View';\nimport ViewabilityHelper from '../ViewabilityHelper';\nvar flattenStyle = StyleSheet.flatten;\nimport infoLog from '../infoLog';\nimport invariant from 'fbjs/lib/invariant';\nimport { keyExtractor as defaultKeyExtractor, computeWindowedRenderLimits } from '../VirtualizeUtils';\nimport * as React from 'react';\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from './VirtualizedListContext.js';\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\n\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n// horizontalOrDefault(this.props.horizontal)\nfunction horizontalOrDefault(horizontal) {\n  return horizontal !== null && horizontal !== void 0 ? horizontal : false;\n} // initialNumToRenderOrDefault(this.props.initialNumToRenderOrDefault)\n\n\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender !== null && initialNumToRender !== void 0 ? initialNumToRender : 10;\n} // maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\n\n\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch !== null && maxToRenderPerBatch !== void 0 ? maxToRenderPerBatch : 10;\n} // onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\n\n\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold !== null && onEndReachedThreshold !== void 0 ? onEndReachedThreshold : 2;\n} // scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\n\n\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle !== null && scrollEventThrottle !== void 0 ? scrollEventThrottle : 50;\n} // windowSizeOrDefault(this.props.windowSize)\n\n\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize !== null && windowSize !== void 0 ? windowSize : 21;\n}\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\n\n\nclass VirtualizedList extends React.PureComponent {\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params) {\n    var animated = params ? params.animated : true;\n    var veryLast = this.props.getItemCount(this.props.data) - 1;\n\n    var frame = this._getFrameMetricsApprox(veryLast);\n\n    var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  } // scrollToIndex may be janky without getItemLayout prop\n\n\n  scrollToIndex(params) {\n    var _this$props = this.props,\n        data = _this$props.data,\n        horizontal = _this$props.horizontal,\n        getItemCount = _this$props.getItemCount,\n        getItemLayout = _this$props.getItemLayout,\n        onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n    var animated = params.animated,\n        index = params.index,\n        viewOffset = params.viewOffset,\n        viewPosition = params.viewPosition;\n    invariant(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n    invariant(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n    invariant(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index\n      });\n      return;\n    }\n\n    var frame = this._getFrameMetricsApprox(index);\n\n    var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(horizontal ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  } // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n\n\n  scrollToItem(params) {\n    var item = params.item;\n    var _this$props2 = this.props,\n        data = _this$props2.data,\n        getItem = _this$props2.getItem,\n        getItemCount = _this$props2.getItemCount;\n    var itemCount = getItemCount(data);\n\n    for (var _index = 0; _index < itemCount; _index++) {\n      if (getItem(data, _index) === item) {\n        this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n          index: _index\n        }));\n        break;\n      }\n    }\n  }\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n\n\n  scrollToOffset(params) {\n    var animated = params.animated,\n        offset = params.offset;\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n\n    this._updateViewableItems(this.props.data);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n\n\n  getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef() {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  _getCellKey() {\n    var _this$context;\n\n    return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n  }\n\n  _getListKey() {\n    return this.props.listKey || this._getCellKey();\n  }\n\n  _getDebugInfo() {\n    var _this$context2;\n\n    return {\n      listKey: this._getListKey(),\n      cellKey: this._getCellKey(),\n      horizontal: horizontalOrDefault(this.props.horizontal),\n      parent: (_this$context2 = this.context) == null ? void 0 : _this$context2.debugInfo\n    };\n  }\n\n  hasMore() {\n    return this._hasMore;\n  }\n\n  constructor(_props) {\n    var _this$props$updateCel;\n\n    super(_props);\n\n    this._getScrollMetrics = () => {\n      return this._scrollMetrics;\n    };\n\n    this._getOutermostParentListRef = () => {\n      if (this._isNestedWithSameOrientation()) {\n        return this.context.getOutermostParentListRef();\n      } else {\n        return this;\n      }\n    };\n\n    this._getNestedChildState = key => {\n      var existingChildData = this._nestedChildLists.get(key);\n\n      return existingChildData && existingChildData.state;\n    };\n\n    this._registerAsNestedChild = childList => {\n      // Register the mapping between this child key and the cellKey for its cell\n      var childListsInCell = this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n      childListsInCell.add(childList.key);\n\n      this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n      var existingChildData = this._nestedChildLists.get(childList.key);\n\n      if (existingChildData && existingChildData.ref !== null) {\n        console.error('A VirtualizedList contains a cell which itself contains ' + 'more than one VirtualizedList of the same orientation as the parent ' + 'list. You must pass a unique listKey prop to each sibling list.\\n\\n' + describeNestedLists(_objectSpread(_objectSpread({}, childList), {}, {\n          // We're called from the child's componentDidMount, so it's safe to\n          // read the child's props here (albeit weird).\n          horizontal: !!childList.ref.props.horizontal\n        })));\n      }\n\n      this._nestedChildLists.set(childList.key, {\n        ref: childList.ref,\n        state: null\n      });\n\n      if (this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n\n    this._unregisterAsNestedChild = childList => {\n      this._nestedChildLists.set(childList.key, {\n        ref: null,\n        state: childList.state\n      });\n    };\n\n    this._onUpdateSeparators = (keys, newProps) => {\n      keys.forEach(key => {\n        var ref = key != null && this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n\n    this._getSpacerKey = isVertical => isVertical ? 'height' : 'width';\n\n    this._averageCellLength = 0;\n    this._cellKeysToChildListKeys = new Map();\n    this._cellRefs = {};\n    this._frames = {};\n    this._footerLength = 0;\n    this._hasDoneInitialScroll = false;\n    this._hasInteracted = false;\n    this._hasMore = false;\n    this._hasWarned = {};\n    this._headerLength = 0;\n    this._hiPriInProgress = false;\n    this._highestMeasuredFrameIndex = 0;\n    this._indicesToKeys = new Map();\n    this._nestedChildLists = new Map();\n    this._offsetFromParentVirtualizedList = 0;\n    this._prevParentOffset = 0;\n    this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0\n    };\n    this._scrollRef = null;\n    this._sentEndForContentLength = 0;\n    this._totalCellLength = 0;\n    this._totalCellsMeasured = 0;\n    this._viewabilityTuples = [];\n\n    this._captureScrollRef = ref => {\n      this._scrollRef = ref;\n    };\n\n    this._defaultRenderScrollComponent = props => {\n      var onRefresh = props.onRefresh;\n\n      if (this._isNestedWithSameOrientation()) {\n        // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n        return /*#__PURE__*/React.createElement(View, props);\n      } else if (onRefresh) {\n        var _props$refreshing;\n\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) !== null && _props$refreshing !== void 0 ? _props$refreshing : 'undefined') + '`');\n        return (\n          /*#__PURE__*/\n          // $FlowFixMe[prop-missing] Invalid prop usage\n          React.createElement(ScrollView, _extends({}, props, {\n            refreshControl: props.refreshControl == null ? /*#__PURE__*/React.createElement(RefreshControl, {\n              refreshing: props.refreshing,\n              onRefresh: onRefresh,\n              progressViewOffset: props.progressViewOffset\n            }) : props.refreshControl\n          }))\n        );\n      } else {\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        return /*#__PURE__*/React.createElement(ScrollView, props);\n      }\n    };\n\n    this._onCellUnmount = cellKey => {\n      var curr = this._frames[cellKey];\n\n      if (curr) {\n        this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n\n    this._onLayout = e => {\n      if (this._isNestedWithSameOrientation()) {\n        // Need to adjust our scroll metrics to be relative to our containing\n        // VirtualizedList before we can make claims about list item viewability\n        this.measureLayoutRelativeToContainingList();\n      } else {\n        this._scrollMetrics.visibleLength = this._selectLength(e.nativeEvent.layout);\n      }\n\n      this.props.onLayout && this.props.onLayout(e);\n\n      this._scheduleCellsToRenderUpdate();\n\n      this._maybeCallOnEndReached();\n    };\n\n    this._onLayoutEmpty = e => {\n      this.props.onLayout && this.props.onLayout(e);\n    };\n\n    this._onLayoutFooter = e => {\n      this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n\n      this._footerLength = this._selectLength(e.nativeEvent.layout);\n    };\n\n    this._onLayoutHeader = e => {\n      this._headerLength = this._selectLength(e.nativeEvent.layout);\n    };\n\n    this._onContentSizeChange = (width, height) => {\n      if (width > 0 && height > 0 && this.props.initialScrollIndex != null && this.props.initialScrollIndex > 0 && !this._hasDoneInitialScroll) {\n        if (this.props.contentOffset == null) {\n          this.scrollToIndex({\n            animated: false,\n            index: this.props.initialScrollIndex\n          });\n        }\n\n        this._hasDoneInitialScroll = true;\n      }\n\n      if (this.props.onContentSizeChange) {\n        this.props.onContentSizeChange(width, height);\n      }\n\n      this._scrollMetrics.contentLength = this._selectLength({\n        height,\n        width\n      });\n\n      this._scheduleCellsToRenderUpdate();\n\n      this._maybeCallOnEndReached();\n    };\n\n    this._convertParentScrollMetrics = metrics => {\n      // Offset of the top of the nested list relative to the top of its parent's viewport\n      var offset = metrics.offset - this._offsetFromParentVirtualizedList; // Child's visible length is the same as its parent's\n\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - this._scrollMetrics.offset;\n      var contentLength = this._scrollMetrics.contentLength;\n      return {\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset\n      };\n    };\n\n    this._onScroll = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScroll(e);\n      });\n\n      if (this.props.onScroll) {\n        this.props.onScroll(e);\n      }\n\n      var timestamp = e.timeStamp;\n\n      var visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n\n      var contentLength = this._selectLength(e.nativeEvent.contentSize);\n\n      var offset = this._selectOffset(e.nativeEvent.contentOffset);\n\n      var dOffset = offset - this._scrollMetrics.offset;\n\n      if (this._isNestedWithSameOrientation()) {\n        if (this._scrollMetrics.contentLength === 0) {\n          // Ignore scroll events until onLayout has been called and we\n          // know our offset from our offset from our parent\n          return;\n        }\n\n        var _this$_convertParentS = this._convertParentScrollMetrics({\n          visibleLength,\n          offset\n        });\n\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n\n      var dt = this._scrollMetrics.timestamp ? Math.max(1, timestamp - this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n\n      if (dt > 500 && this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt,\n          prevDt: this._scrollMetrics.dt,\n          contentLength\n        });\n        this._hasWarned.perf = true;\n      }\n\n      this._scrollMetrics = {\n        contentLength,\n        dt,\n        dOffset,\n        offset,\n        timestamp,\n        velocity,\n        visibleLength\n      };\n\n      this._updateViewableItems(this.props.data);\n\n      if (!this.props) {\n        return;\n      }\n\n      this._maybeCallOnEndReached();\n\n      if (velocity !== 0) {\n        this._fillRateHelper.activate();\n      }\n\n      this._computeBlankness();\n\n      this._scheduleCellsToRenderUpdate();\n    };\n\n    this._onScrollBeginDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScrollBeginDrag(e);\n      });\n\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n\n      this._hasInteracted = true;\n      this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n    };\n\n    this._onScrollEndDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScrollEndDrag(e);\n      });\n\n      var velocity = e.nativeEvent.velocity;\n\n      if (velocity) {\n        this._scrollMetrics.velocity = this._selectOffset(velocity);\n      }\n\n      this._computeBlankness();\n\n      this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n    };\n\n    this._onMomentumScrollBegin = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onMomentumScrollBegin(e);\n      });\n\n      this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n    };\n\n    this._onMomentumScrollEnd = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onMomentumScrollEnd(e);\n      });\n\n      this._scrollMetrics.velocity = 0;\n\n      this._computeBlankness();\n\n      this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n    };\n\n    this._updateCellsToRender = () => {\n      var _this$props3 = this.props,\n          data = _this$props3.data,\n          getItemCount = _this$props3.getItemCount,\n          _onEndReachedThreshold = _this$props3.onEndReachedThreshold;\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(_onEndReachedThreshold);\n\n      var isVirtualizationDisabled = this._isVirtualizationDisabled();\n\n      this._updateViewableItems(data);\n\n      if (!data) {\n        return;\n      }\n\n      this.setState(state => {\n        var newState;\n        var _this$_scrollMetrics = this._scrollMetrics,\n            contentLength = _this$_scrollMetrics.contentLength,\n            offset = _this$_scrollMetrics.offset,\n            visibleLength = _this$_scrollMetrics.visibleLength;\n\n        if (!isVirtualizationDisabled) {\n          // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n          // and wipe out the initialNumToRender rendered elements.\n          // So let's wait until the scroll view metrics have been set up. And until then,\n          // we will trust the initialNumToRender suggestion\n          if (visibleLength > 0 && contentLength > 0) {\n            // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n            // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n            // So let's wait until we've scrolled the view to the right place. And until then,\n            // we will trust the initialScrollIndex suggestion.\n            if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n              newState = computeWindowedRenderLimits(this.props.data, this.props.getItemCount, maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch), windowSizeOrDefault(this.props.windowSize), state, this._getFrameMetricsApprox, this._scrollMetrics);\n            }\n          }\n        } else {\n          var distanceFromEnd = contentLength - visibleLength - offset;\n          var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch) : 0;\n          newState = {\n            first: 0,\n            last: Math.min(state.last + renderAhead, getItemCount(data) - 1)\n          };\n        }\n\n        if (newState && this._nestedChildLists.size > 0) {\n          var newFirst = newState.first;\n          var newLast = newState.last; // If some cell in the new state has a child list in it, we should only render\n          // up through that item, so that we give that list a chance to render.\n          // Otherwise there's churn from multiple child lists mounting and un-mounting\n          // their items.\n\n          for (var ii = newFirst; ii <= newLast; ii++) {\n            var cellKeyForIndex = this._indicesToKeys.get(ii);\n\n            var childListKeys = cellKeyForIndex && this._cellKeysToChildListKeys.get(cellKeyForIndex);\n\n            if (!childListKeys) {\n              continue;\n            }\n\n            var someChildHasMore = false; // For each cell, need to check whether any child list in it has more elements to render\n\n            for (var _iterator = _createForOfIteratorHelperLoose(childListKeys), _step; !(_step = _iterator()).done;) {\n              var childKey = _step.value;\n\n              var childList = this._nestedChildLists.get(childKey);\n\n              if (childList && childList.ref && childList.ref.hasMore()) {\n                someChildHasMore = true;\n                break;\n              }\n            }\n\n            if (someChildHasMore) {\n              // $FlowFixMe[incompatible-use] The newState definitely exists past \"if (newState &&\"\n              newState.last = ii;\n              break;\n            }\n          }\n        }\n\n        if (newState != null && newState.first === state.first && newState.last === state.last) {\n          newState = null;\n        }\n\n        return newState;\n      });\n    };\n\n    this._createViewToken = (index, isViewable) => {\n      var _this$props4 = this.props,\n          data = _this$props4.data,\n          getItem = _this$props4.getItem;\n      var item = getItem(data, index);\n      return {\n        index,\n        item,\n        key: this._keyExtractor(item, index),\n        isViewable\n      };\n    };\n\n    this._getFrameMetricsApprox = index => {\n      var frame = this._getFrameMetrics(index);\n\n      if (frame && frame.index === index) {\n        // check for invalid frames due to row re-ordering\n        return frame;\n      } else {\n        var getItemLayout = this.props.getItemLayout;\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: this._averageCellLength,\n          offset: this._averageCellLength * index\n        };\n      }\n    };\n\n    this._getFrameMetrics = index => {\n      var _this$props5 = this.props,\n          data = _this$props5.data,\n          getItem = _this$props5.getItem,\n          getItemCount = _this$props5.getItemCount,\n          getItemLayout = _this$props5.getItemLayout;\n      invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n\n      var frame = item && this._frames[this._keyExtractor(item, index)];\n\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          frame = getItemLayout(data, index);\n        }\n      }\n      /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.63 was deployed. To see the error\n       * delete this comment and run Flow. */\n\n\n      return frame;\n    };\n\n    invariant( // $FlowFixMe[prop-missing]\n    !_props.onScroll || !_props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(windowSizeOrDefault(_props.windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(this._updateCellsToRender, (_this$props$updateCel = this.props.updateCellsBatchingPeriod) !== null && _this$props$updateCel !== void 0 ? _this$props$updateCel : 50);\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(pair => ({\n        viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n        onViewableItemsChanged: pair.onViewableItemsChanged\n      }));\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        // $FlowFixMe[incompatible-call]\n        onViewableItemsChanged: this.props.onViewableItemsChanged\n      });\n    }\n\n    var initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last: Math.min(this.props.getItemCount(this.props.data), (this.props.initialScrollIndex || 0) + initialNumToRenderOrDefault(this.props.initialNumToRender)) - 1\n    };\n\n    if (this._isNestedWithSameOrientation()) {\n      var storedState = this.context.getNestedChildState(this._getListKey());\n\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    // For issue https://github.com/necolas/react-native-web/issues/995\n\n\n    this.invertedWheelEventHandler = ev => {\n      if (this.props.inverted && this._scrollRef && this._scrollRef.getScrollableNode) {\n        var node = this._scrollRef.getScrollableNode();\n\n        if (this.props.horizontal) {\n          node.scrollLeft -= ev.deltaX || ev.wheelDeltaX;\n        } else {\n          node.scrollTop -= ev.deltaY || ev.wheelDeltaY;\n        }\n\n        ev.preventDefault();\n      }\n    };\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this._getListKey(),\n        ref: this,\n        // NOTE: When the child mounts (here) it's not necessarily safe to read\n        // the parent's props. This is why we explicitly propagate debugInfo\n        // \"down\" via context and \"up\" again via this method call on the\n        // parent.\n        parentDebugInfo: this.context.debugInfo\n      });\n    } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n    this.setupWebWheelHandler();\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({\n        key: this._getListKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames\n        }\n      });\n    }\n\n    this._updateViewableItems(null);\n\n    this._updateCellsToRenderBatcher.dispose({\n      abort: true\n    });\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n\n    this._fillRateHelper.deactivateAndFlush(); // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n    this.teardownWebWheelHandler();\n  } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n  setupWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().addEventListener('wheel', this.invertedWheelEventHandler);\n    } else {\n      setTimeout(() => this.setupWebWheelHandler(), 50);\n      return;\n    }\n  } // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n\n\n  teardownWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().removeEventListener('wheel', this.invertedWheelEventHandler);\n    }\n  }\n\n  static getDerivedStateFromProps(newProps, prevState) {\n    var data = newProps.data,\n        getItemCount = newProps.getItemCount;\n    var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(newProps.maxToRenderPerBatch); // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n\n    return {\n      first: Math.max(0, Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch)),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1))\n    };\n  }\n\n  _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n    var _this = this;\n\n    var _this$props6 = this.props,\n        CellRendererComponent = _this$props6.CellRendererComponent,\n        ItemSeparatorComponent = _this$props6.ItemSeparatorComponent,\n        data = _this$props6.data,\n        getItem = _this$props6.getItem,\n        getItemCount = _this$props6.getItemCount,\n        horizontal = _this$props6.horizontal;\n    var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    var end = getItemCount(data) - 1;\n    var prevCellKey;\n    last = Math.min(end, last);\n\n    var _loop = function _loop(ii) {\n      var item = getItem(data, ii);\n\n      var key = _this._keyExtractor(item, ii);\n\n      _this._indicesToKeys.set(ii, key);\n\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n\n      cells.push( /*#__PURE__*/React.createElement(CellRenderer, {\n        CellRendererComponent: CellRendererComponent,\n        ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n        cellKey: key,\n        fillRateHelper: _this._fillRateHelper,\n        horizontal: horizontal,\n        index: ii,\n        inversionStyle: inversionStyle,\n        item: item,\n        key: key,\n        prevCellKey: prevCellKey,\n        onUpdateSeparators: _this._onUpdateSeparators,\n        onLayout: e => _this._onCellLayout(e, key, ii),\n        onUnmount: _this._onCellUnmount,\n        parentProps: _this.props,\n        ref: _ref => {\n          _this._cellRefs[key] = _ref;\n        }\n      }));\n      prevCellKey = key;\n    };\n\n    for (var ii = first; ii <= last; ii++) {\n      _loop(ii);\n    }\n  }\n\n  _isVirtualizationDisabled() {\n    return this.props.disableVirtualization || false;\n  }\n\n  _isNestedWithSameOrientation() {\n    var nestedContext = this.context;\n    return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n  }\n\n  _keyExtractor(item, index) {\n    if (this.props.keyExtractor != null) {\n      return this.props.keyExtractor(item, index);\n    }\n\n    var key = defaultKeyExtractor(item, index);\n\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n\n    return key;\n  }\n\n  render() {\n    if (__DEV__) {\n      var flatStyles = flattenStyle(this.props.contentContainerStyle);\n\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n      }\n    }\n\n    var _this$props7 = this.props,\n        ListEmptyComponent = _this$props7.ListEmptyComponent,\n        ListFooterComponent = _this$props7.ListFooterComponent,\n        ListHeaderComponent = _this$props7.ListHeaderComponent;\n    var _this$props8 = this.props,\n        data = _this$props8.data,\n        horizontal = _this$props8.horizontal;\n\n    var isVirtualizationDisabled = this._isVirtualizationDisabled();\n\n    var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n    var cells = [];\n    var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    var stickyHeaderIndices = [];\n\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n\n      var element = /*#__PURE__*/React.isValidElement(ListHeaderComponent) ? ListHeaderComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListHeaderComponent, null);\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getCellKey() + '-header',\n        key: \"$header\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutHeader,\n        style: StyleSheet.compose(inversionStyle, this.props.ListHeaderComponentStyle)\n      }, // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      element)));\n    }\n\n    var itemCount = this.props.getItemCount(data);\n\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n\n      var spacerKey = this._getSpacerKey(!horizontal);\n\n      var lastInitialIndex = this.props.initialScrollIndex ? -1 : initialNumToRenderOrDefault(this.props.initialNumToRender) - 1;\n      var _this$state = this.state,\n          first = _this$state.first,\n          last = _this$state.last;\n\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);\n\n      var firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        var insertedStickySpacer = false;\n\n        if (stickyIndicesFromProps.size > 0) {\n          var stickyOffset = ListHeaderComponent ? 1 : 0; // See if there are any sticky headers in the virtualized space that we need to render.\n\n          for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              var initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n              var stickyBlock = this._getFrameMetricsApprox(ii);\n\n              var leadSpace = stickyBlock.offset - initBlock.offset - (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push( /*#__PURE__*/React.createElement(View, {\n                key: \"$sticky_lead\",\n                style: {\n                  [spacerKey]: leadSpace\n                }\n              }));\n\n              this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);\n\n              var trailSpace = this._getFrameMetricsApprox(first).offset - (stickyBlock.offset + stickyBlock.length);\n              cells.push( /*#__PURE__*/React.createElement(View, {\n                key: \"$sticky_trail\",\n                style: {\n                  [spacerKey]: trailSpace\n                }\n              }));\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n\n        if (!insertedStickySpacer) {\n          var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n\n          var firstSpace = this._getFrameMetricsApprox(first).offset - (_initBlock.offset + _initBlock.length);\n\n          cells.push( /*#__PURE__*/React.createElement(View, {\n            key: \"$lead_spacer\",\n            style: {\n              [spacerKey]: firstSpace\n            }\n          }));\n        }\n      }\n\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, last, inversionStyle);\n\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n        this._hasWarned.keys = true;\n      }\n\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        var lastFrame = this._getFrameMetricsApprox(last); // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n\n\n        var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n\n        var endFrame = this._getFrameMetricsApprox(end);\n\n        var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);\n        cells.push( /*#__PURE__*/React.createElement(View, {\n          key: \"$tail_spacer\",\n          style: {\n            [spacerKey]: tailSpacerLength\n          }\n        }));\n      }\n    } else if (ListEmptyComponent) {\n      var _element = /*#__PURE__*/React.isValidElement(ListEmptyComponent) ? ListEmptyComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListEmptyComponent, null);\n\n      cells.push( /*#__PURE__*/React.cloneElement(_element, {\n        key: '$empty',\n        onLayout: event => {\n          this._onLayoutEmpty(event);\n\n          if (_element.props.onLayout) {\n            _element.props.onLayout(event);\n          }\n        },\n        style: StyleSheet.compose(inversionStyle, _element.props.style)\n      }));\n    }\n\n    if (ListFooterComponent) {\n      var _element2 = /*#__PURE__*/React.isValidElement(ListFooterComponent) ? ListFooterComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListFooterComponent, null);\n\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getFooterCellKey(),\n        key: \"$footer\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutFooter,\n        style: StyleSheet.compose(inversionStyle, this.props.ListFooterComponentStyle)\n      }, // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      _element2)));\n    }\n\n    var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n      // TODO: Android support\n      invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n    });\n\n    this._hasMore = this.state.last < this.props.getItemCount(this.props.data) - 1;\n    var innerRet = /*#__PURE__*/React.createElement(VirtualizedListContextProvider, {\n      value: {\n        cellKey: null,\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: horizontalOrDefault(this.props.horizontal),\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild,\n        debugInfo: this._getDebugInfo()\n      }\n    }, /*#__PURE__*/React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n      ref: this._captureScrollRef\n    }, cells));\n    var ret = innerRet;\n    /* https://github.com/necolas/react-native-web/issues/2239: Re-enable when ScrollView.Context.Consumer is available.\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }*/\n\n    if (this.props.debug) {\n      return /*#__PURE__*/React.createElement(View, {\n        style: styles.debug\n      }, ret, this._renderDebugOverlay());\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    var _this$props9 = this.props,\n        data = _this$props9.data,\n        extraData = _this$props9.extraData;\n\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    } // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n\n\n    var hiPriInProgress = this._hiPriInProgress;\n\n    this._scheduleCellsToRenderUpdate(); // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n\n\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);\n  }\n\n  _onCellLayout(e, cellKey, index) {\n    var layout = e.nativeEvent.layout;\n    var next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true\n    };\n    var curr = this._frames[cellKey];\n\n    if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n\n    this._computeBlankness();\n\n    this._updateViewableItems(this.props.data);\n  }\n\n  _triggerRemeasureForChildListsInCell(cellKey) {\n    var childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n\n    if (childListKeys) {\n      for (var _iterator2 = _createForOfIteratorHelperLoose(childListKeys), _step2; !(_step2 = _iterator2()).done;) {\n        var childKey = _step2.value;\n\n        var childList = this._nestedChildLists.get(childKey);\n\n        childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n  }\n\n  measureLayoutRelativeToContainingList() {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      } // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n\n\n      this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), (x, y, width, height) => {\n        this._offsetFromParentVirtualizedList = this._selectOffset({\n          x,\n          y\n        });\n        this._scrollMetrics.contentLength = this._selectLength({\n          width,\n          height\n        });\n\n        var scrollMetrics = this._convertParentScrollMetrics(this.context.getScrollMetrics());\n\n        var metricsChanged = this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || this._scrollMetrics.offset !== scrollMetrics.offset;\n\n        if (metricsChanged) {\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          this._scrollMetrics.offset = scrollMetrics.offset; // If metrics of the scrollView changed, then we triggered remeasure for child list\n          // to ensure VirtualizedList has the right information.\n\n          this._cellKeysToChildListKeys.forEach(childListKeys => {\n            if (childListKeys) {\n              for (var _iterator3 = _createForOfIteratorHelperLoose(childListKeys), _step3; !(_step3 = _iterator3()).done;) {\n                var childKey = _step3.value;\n\n                var childList = this._nestedChildLists.get(childKey);\n\n                childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n              }\n            }\n          });\n        }\n      }, error => {\n        console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n      });\n    } catch (error) {\n      console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n    }\n  }\n\n  _getFooterCellKey() {\n    return this._getCellKey() + '-footer';\n  }\n\n  _renderDebugOverlay() {\n    var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n    var framesInLayout = [];\n    var itemCount = this.props.getItemCount(this.props.data);\n\n    for (var ii = 0; ii < itemCount; ii++) {\n      var frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n\n\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n\n    var windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n\n    var frameLast = this._getFrameMetricsApprox(this.state.last);\n\n    var windowLen = frameLast.offset + frameLast.length - windowTop;\n    var visTop = this._scrollMetrics.offset;\n    var visLen = this._scrollMetrics.visibleLength;\n    return /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlay]\n    }, framesInLayout.map((f, ii) => /*#__PURE__*/React.createElement(View, {\n      key: 'f' + ii,\n      style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n        top: f.offset * normalize,\n        height: f.length * normalize\n      }]\n    })), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n        top: windowTop * normalize,\n        height: windowLen * normalize\n      }]\n    }), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n        top: visTop * normalize,\n        height: visLen * normalize\n      }]\n    }));\n  }\n\n  _selectLength(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n  }\n\n  _selectOffset(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    var _this$props10 = this.props,\n        data = _this$props10.data,\n        getItemCount = _this$props10.getItemCount,\n        onEndReached = _this$props10.onEndReached,\n        onEndReachedThreshold = _this$props10.onEndReachedThreshold;\n    var _this$_scrollMetrics2 = this._scrollMetrics,\n        contentLength = _this$_scrollMetrics2.contentLength,\n        visibleLength = _this$_scrollMetrics2.visibleLength,\n        offset = _this$_scrollMetrics2.offset;\n    var distanceFromEnd = contentLength - visibleLength - offset;\n    var threshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : 2;\n\n    if (onEndReached && this.state.last === getItemCount(data) - 1 && distanceFromEnd < threshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n      // Only call onEndReached once for a given content length\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({\n        distanceFromEnd\n      });\n    } else if (distanceFromEnd > threshold) {\n      // If the user scrolls away from the end and back again cause\n      // an onEndReached to be triggered again\n      this._sentEndForContentLength = 0;\n    }\n  }\n\n  _scheduleCellsToRenderUpdate() {\n    var _this$state2 = this.state,\n        first = _this$state2.first,\n        last = _this$state2.last;\n    var _this$_scrollMetrics3 = this._scrollMetrics,\n        offset = _this$_scrollMetrics3.offset,\n        visibleLength = _this$_scrollMetrics3.visibleLength,\n        velocity = _this$_scrollMetrics3.velocity;\n    var itemCount = this.props.getItemCount(this.props.data);\n    var hiPri = false;\n    var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n    var scrollingThreshold = onEndReachedThreshold * visibleLength / 2; // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n\n    if (first > 0) {\n      var distTop = offset - this._getFrameMetricsApprox(first).offset;\n\n      hiPri = hiPri || distTop < 0 || velocity < -2 && distTop < scrollingThreshold;\n    } // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n\n\n    if (last < itemCount - 1) {\n      var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri = hiPri || distBottom < 0 || velocity > 2 && distBottom < scrollingThreshold;\n    } // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n\n\n    if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n      this._hiPriInProgress = true; // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n\n      this._updateCellsToRender();\n\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _updateViewableItems(data) {\n    var getItemCount = this.props.getItemCount;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(getItemCount(data), this._scrollMetrics.offset, this._scrollMetrics.visibleLength, this._getFrameMetrics, this._createViewToken, tuple.onViewableItemsChanged, this.state);\n    });\n  }\n\n}\n\nVirtualizedList.contextType = VirtualizedListContext;\n\nclass CellRenderer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: this.props.item\n      }\n    };\n    this._separators = {\n      highlight: () => {\n        var _this$props11 = this.props,\n            cellKey = _this$props11.cellKey,\n            prevCellKey = _this$props11.prevCellKey;\n        this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: () => {\n        var _this$props12 = this.props,\n            cellKey = _this$props12.cellKey,\n            prevCellKey = _this$props12.prevCellKey;\n        this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: (select, newProps) => {\n        var _this$props13 = this.props,\n            cellKey = _this$props13.cellKey,\n            prevCellKey = _this$props13.prevCellKey;\n        this.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);\n      }\n    };\n  }\n\n  static getDerivedStateFromProps(props, prevState) {\n    return {\n      separatorProps: _objectSpread(_objectSpread({}, prevState.separatorProps), {}, {\n        leadingItem: props.item\n      })\n    };\n  } // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n\n\n  updateSeparatorProps(newProps) {\n    this.setState(state => ({\n      separatorProps: _objectSpread(_objectSpread({}, state.separatorProps), newProps)\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  _renderElement(renderItem, ListItemComponent, item, index) {\n    if (renderItem && ListItemComponent) {\n      console.warn('VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' + ' precedence over renderItem.');\n    }\n\n    if (ListItemComponent) {\n      /* $FlowFixMe[not-a-component] (>=0.108.0 site=react_native_fb) This\n       * comment suppresses an error found when Flow v0.108 was deployed. To\n       * see the error, delete this comment and run Flow. */\n\n      /* $FlowFixMe[incompatible-type-arg] (>=0.108.0 site=react_native_fb)\n       * This comment suppresses an error found when Flow v0.108 was deployed.\n       * To see the error, delete this comment and run Flow. */\n      return /*#__PURE__*/React.createElement(ListItemComponent, {\n        item,\n        index,\n        separators: this._separators\n      });\n    }\n\n    if (renderItem) {\n      return renderItem({\n        item,\n        index,\n        separators: this._separators\n      });\n    }\n\n    invariant(false, 'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.');\n  }\n\n  render() {\n    var _this$props14 = this.props,\n        CellRendererComponent = _this$props14.CellRendererComponent,\n        ItemSeparatorComponent = _this$props14.ItemSeparatorComponent,\n        fillRateHelper = _this$props14.fillRateHelper,\n        horizontal = _this$props14.horizontal,\n        item = _this$props14.item,\n        index = _this$props14.index,\n        inversionStyle = _this$props14.inversionStyle,\n        parentProps = _this$props14.parentProps;\n    var renderItem = parentProps.renderItem,\n        getItemLayout = parentProps.getItemLayout,\n        ListItemComponent = parentProps.ListItemComponent;\n\n    var element = this._renderElement(renderItem, ListItemComponent, item, index);\n\n    var onLayout =\n    /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n     * suppresses an error found when Flow v0.68 was deployed. To see the\n     * error delete this comment and run Flow. */\n    getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout; // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n\n    var itemSeparator = ItemSeparatorComponent && /*#__PURE__*/React.createElement(ItemSeparatorComponent, this.state.separatorProps);\n    var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n    var result = !CellRendererComponent ?\n    /*#__PURE__*/\n\n    /* $FlowFixMe[incompatible-type-arg] (>=0.89.0 site=react_native_fb) *\n      This comment suppresses an error found when Flow v0.89 was deployed. *\n      To see the error, delete this comment and run Flow. */\n    React.createElement(View, {\n      style: cellStyle,\n      onLayout: onLayout\n    }, element, itemSeparator) : /*#__PURE__*/React.createElement(CellRendererComponent, _extends({}, this.props, {\n      style: cellStyle,\n      onLayout: onLayout\n    }), element, itemSeparator);\n    return /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n      cellKey: this.props.cellKey\n    }, result);\n  }\n\n}\n\nfunction describeNestedLists(childList) {\n  var trace = 'VirtualizedList trace:\\n' + (\"  Child (\" + (childList.horizontal ? 'horizontal' : 'vertical') + \"):\\n\") + (\"    listKey: \" + childList.key + \"\\n\") + (\"    cellKey: \" + childList.cellKey);\n  var debugInfo = childList.parentDebugInfo;\n\n  while (debugInfo) {\n    trace += \"\\n  Parent (\" + (debugInfo.horizontal ? 'horizontal' : 'vertical') + \"):\\n\" + (\"    listKey: \" + debugInfo.listKey + \"\\n\") + (\"    cellKey: \" + debugInfo.cellKey);\n    debugInfo = debugInfo.parent;\n  }\n\n  return trace;\n}\n\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    transform: [{\n      scaleX: -1\n    }]\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nexport default VirtualizedList;"]},"metadata":{},"sourceType":"module"}