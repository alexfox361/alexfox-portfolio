{"ast":null,"code":"/**\r\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\r\n *\r\n * Specifically:\r\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\r\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\r\n *\r\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\r\n */\nfunction twJoin() {\n  var index = 0;\n  var argument;\n  var resolvedValue;\n  var string = '';\n\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n\n  return string;\n}\n\nfunction toValue(mix) {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n\n  var resolvedValue;\n  var string = '';\n\n  for (var k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n\n  return string;\n}\n\nexport { twJoin };","map":{"version":3,"sources":["../../src/lib/tw-join.ts"],"names":["twJoin","index","string","arguments","argument","resolvedValue","toValue","k","mix"],"mappings":"AAAA;;;;;;;;AAQG;SAMaA,M,GAAM;AAClB,MAAIC,KAAK,GAAT,CAAA;AACA,MAAA,QAAA;AACA,MAAA,aAAA;AACA,MAAIC,MAAM,GAAV,EAAA;;AAEA,SAAOD,KAAK,GAAGE,SAAS,CAAxB,MAAA,EAAiC;AAC7B,QAAKC,QAAQ,GAAGD,SAAS,CAACF,KAA1B,EAAyB,CAAzB,EAAqC;AACjC,UAAKI,aAAa,GAAGC,OAAO,CAA5B,QAA4B,CAA5B,EAAyC;AACrCJ,QAAAA,MAAM,KAAKA,MAAM,IAAjBA,GAAM,CAANA;AACAA,QAAAA,MAAM,IAANA,aAAAA;AACH;AACJ;AACJ;;AACD,SAAA,MAAA;AACH;;AAED,SAAA,OAAA,CAAA,GAAA,EAA6C;AACzC,MAAI,OAAA,GAAA,KAAJ,QAAA,EAA6B;AACzB,WAAA,GAAA;AACH;;AAED,MAAA,aAAA;AACA,MAAIA,MAAM,GAAV,EAAA;;AAEA,OAAK,IAAIK,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGC,GAAG,CAAvB,MAAA,EAAgCD,CAAhC,EAAA,EAAqC;AACjC,QAAIC,GAAG,CAAP,CAAO,CAAP,EAAY;AACR,UAAKH,aAAa,GAAGC,OAAO,CAACE,GAAG,CAAhC,CAAgC,CAAJ,CAA5B,EAAkE;AAC9DN,QAAAA,MAAM,KAAKA,MAAM,IAAjBA,GAAM,CAANA;AACAA,QAAAA,MAAM,IAANA,aAAAA;AACH;AACJ;AACJ;;AAED,SAAA,MAAA;AACH","sourcesContent":["/**\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\n *\n * Specifically:\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\n *\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\n */\n\nexport type ClassNameValue = ClassNameArray | string | null | undefined | 0 | false\ntype ClassNameArray = ClassNameValue[]\n\nexport function twJoin(...classLists: ClassNameValue[]): string\nexport function twJoin() {\n    let index = 0\n    let argument: ClassNameValue\n    let resolvedValue: string\n    let string = ''\n\n    while (index < arguments.length) {\n        if ((argument = arguments[index++])) {\n            if ((resolvedValue = toValue(argument))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n    return string\n}\n\nfunction toValue(mix: ClassNameArray | string) {\n    if (typeof mix === 'string') {\n        return mix\n    }\n\n    let resolvedValue: string\n    let string = ''\n\n    for (let k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n            if ((resolvedValue = toValue(mix[k] as ClassNameArray | string))) {\n                string && (string += ' ')\n                string += resolvedValue\n            }\n        }\n    }\n\n    return string\n}\n"]},"metadata":{},"sourceType":"module"}