{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = filter;\n\nvar _cssInJsUtils = require('css-in-js-utils');\n\nvar FILTER_REGEX = /filter\\(/g; // http://caniuse.com/#feat=css-filter-function\n\nvar prefixes = ['-webkit-', ''];\n\nfunction filter(property, value) {\n  if (typeof value === 'string' && !(0, _cssInJsUtils.isPrefixedValue)(value) && value.indexOf('filter(') !== -1) {\n    return prefixes.map(function (prefix) {\n      return value.replace(FILTER_REGEX, prefix + 'filter(');\n    });\n  }\n}","map":{"version":3,"sources":["C:/Users/alex/Documents/GitHub/alexfox-portfolio/node_modules/inline-style-prefixer/lib/plugins/filter.js"],"names":["Object","defineProperty","exports","value","default","filter","_cssInJsUtils","require","FILTER_REGEX","prefixes","property","isPrefixedValue","indexOf","map","prefix","replace"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,MAAlB;;AAEA,IAAIC,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA3B;;AAEA,IAAIC,YAAY,GAAG,WAAnB,C,CACA;;AACA,IAAIC,QAAQ,GAAG,CAAC,UAAD,EAAa,EAAb,CAAf;;AAEA,SAASJ,MAAT,CAAgBK,QAAhB,EAA0BP,KAA1B,EAAiC;AAC/B,MAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,CAAC,CAAC,GAAGG,aAAa,CAACK,eAAlB,EAAmCR,KAAnC,CAA9B,IAA2EA,KAAK,CAACS,OAAN,CAAc,SAAd,MAA6B,CAAC,CAA7G,EAAgH;AAC9G,WAAOH,QAAQ,CAACI,GAAT,CAAa,UAAUC,MAAV,EAAkB;AACpC,aAAOX,KAAK,CAACY,OAAN,CAAcP,YAAd,EAA4BM,MAAM,GAAG,SAArC,CAAP;AACD,KAFM,CAAP;AAGD;AACF","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = filter;\n\nvar _cssInJsUtils = require('css-in-js-utils');\n\nvar FILTER_REGEX = /filter\\(/g;\n// http://caniuse.com/#feat=css-filter-function\nvar prefixes = ['-webkit-', ''];\n\nfunction filter(property, value) {\n  if (typeof value === 'string' && !(0, _cssInJsUtils.isPrefixedValue)(value) && value.indexOf('filter(') !== -1) {\n    return prefixes.map(function (prefix) {\n      return value.replace(FILTER_REGEX, prefix + 'filter(');\n    });\n  }\n}"]},"metadata":{},"sourceType":"script"}