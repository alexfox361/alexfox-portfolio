{"ast":null,"code":"import { createTailwindMerge } from './create-tailwind-merge.mjs';\nimport { getDefaultConfig } from './default-config.mjs';\nimport { mergeConfigs } from './merge-configs.mjs';\n\nfunction extendTailwindMerge(configExtension) {\n  for (var _len = arguments.length, createConfig = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    createConfig[_key - 1] = arguments[_key];\n  }\n\n  return typeof configExtension === 'function' ? createTailwindMerge.apply(void 0, [getDefaultConfig, configExtension].concat(createConfig)) : createTailwindMerge.apply(void 0, [function () {\n    return mergeConfigs(getDefaultConfig(), configExtension);\n  }].concat(createConfig));\n}\n\nexport { extendTailwindMerge };","map":{"version":3,"sources":["../../src/lib/extend-tailwind-merge.ts"],"names":["extendTailwindMerge","configExtension","createConfig","createTailwindMerge","mergeConfigs","getDefaultConfig"],"mappings":";;;;SAOgBA,mB,CACZC,e,EACyC;AAAA,OAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAtCC,YAAsC,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAtCA,IAAAA,YAAsC,CAAA,IAAA,GAAA,CAAA,CAAtCA,GAAsC,SAAA,CAAA,IAAA,CAAtCA;AAAsC;;AAEzC,SAAO,OAAA,eAAA,KAAA,UAAA,GACDC,mBAAmB,CAAnBA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAAA,gBAAAA,EAAAA,eAAAA,EAA0DD,MAA1DC,CADC,YACDA,CAAAA,CADC,GAED,mBAAmB,CAAnB,KAAA,CACI,KAAA,CADJ,EACI,CAAA,YAAA;AAAA,WAAMC,YAAY,CAACC,gBAAD,EAAA,EAAlB,eAAkB,CAAlB;AADJ,GACI,EADJ,MACI,CAHV,YAGU,CADJ,CAFN;AAMH","sourcesContent":["import { createTailwindMerge } from './create-tailwind-merge'\nimport { getDefaultConfig } from './default-config'\nimport { mergeConfigs } from './merge-configs'\nimport { Config } from './types'\n\ntype CreateConfigSubsequent = (config: Config) => Config\n\nexport function extendTailwindMerge(\n    configExtension: Partial<Config> | CreateConfigSubsequent,\n    ...createConfig: CreateConfigSubsequent[]\n) {\n    return typeof configExtension === 'function'\n        ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig)\n        : createTailwindMerge(\n              () => mergeConfigs(getDefaultConfig(), configExtension),\n              ...createConfig,\n          )\n}\n"]},"metadata":{},"sourceType":"module"}