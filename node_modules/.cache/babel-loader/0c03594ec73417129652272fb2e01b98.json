{"ast":null,"code":"import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction isWindow(value) {\n  return value && value.document && value.location && value.alert && value.setInterval;\n}\n\nfunction getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (!isWindow(node)) {\n    const ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}\n\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction getNodeName(node) {\n  return isWindow(node) ? '' : node ? (node.nodeName || '').toLowerCase() : '';\n}\n\nfunction getUAString() {\n  const uaData = navigator.userAgentData;\n\n  if (uaData != null && uaData.brands) {\n    return uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n  }\n\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\n\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\n\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\n\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nfunction isOverflowElement(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\n\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\n\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter; // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some( // TS 4.1 compat\n  value => {\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\n\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString()); // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\n\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  const clientRect = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scaleX;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scaleY;\n  const width = clientRect.width / scaleX;\n  const height = clientRect.height / scaleY;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\nfunction isScaled(element) {\n  const rect = getBoundingClientRect(element);\n  return round(rect.width) !== element.offsetWidth || round(rect.height) !== element.offsetHeight;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, // @ts-ignore - checked above (TS 4.1 compat)\n  isOffsetParentAnElement && isScaled(offsetParent), strategy === 'fixed');\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n\n  const result = // Step into the shadow DOM of the parent of a slotted node\n  node.assignedSlot || // DOM Element detected\n  node.parentNode || ( // ShadowRoot detected\n  isShadowRoot(node) ? node.host : null) || // Fallback\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n}\n\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to be need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n\n  }\n\n  return { ...rect,\n    x: rect.x - scroll.scrollLeft + offsets.x,\n    y: rect.y - scroll.scrollTop + offsets.y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n} // of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n\n  if (isLastTraversableNode(parentNode)) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  const target = isBody ? [win].concat(win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []) : scrollableAncestor;\n  const updatedList = list.concat(target);\n  return isBody ? updatedList : // @ts-ignore: isBody tells us target will be an HTMLElement here\n  updatedList.concat(getOverflowAncestors(target));\n}\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, false, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  return {\n    top,\n    left,\n    x: left,\n    y: top,\n    right: left + element.clientWidth,\n    bottom: top + element.clientHeight,\n    width: element.clientWidth,\n    height: element.clientHeight\n  };\n}\n\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping ancestor\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingElementAncestors(element) {\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentNode = element;\n  let currentContainingBlockComputedStyle = null; // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n\n    if (computedStyle.position === 'static' && currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) && !isContainingBlock(currentNode)) {\n      // Drop non-containing blocks\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n\n    currentNode = getParentNode(currentNode);\n  }\n\n  return result;\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\n\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getElementRects: _ref => {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, getOffsetParent(floating), strategy),\n      floating: { ...getDimensions(floating),\n        x: 0,\n        y: 0\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle(element).direction === 'rtl'\n};\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\n\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n\n    observer.observe(floating);\n  }\n\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n\n  if (animationFrame) {\n    frameLoop();\n  }\n\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n\n  update();\n  return () => {\n    var _observer;\n\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\n\nconst computePosition = (reference, floating, options) => computePosition$1(reference, floating, {\n  platform,\n  ...options\n});\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };","map":{"version":3,"sources":["C:/Users/alex/Documents/GitHub/alexfox-portfolio/node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js"],"names":["rectToClientRect","computePosition","computePosition$1","arrow","autoPlacement","detectOverflow","flip","hide","inline","limitShift","offset","shift","size","isWindow","value","document","location","alert","setInterval","getWindow","node","window","ownerDocument","defaultView","getComputedStyle","element","getNodeName","nodeName","toLowerCase","getUAString","uaData","navigator","userAgentData","brands","map","item","brand","version","join","userAgent","isHTMLElement","HTMLElement","isElement","Element","isNode","Node","isShadowRoot","ShadowRoot","OwnElement","isOverflowElement","overflow","overflowX","overflowY","display","test","includes","isTableElement","isContainingBlock","isFirefox","css","backdropFilter","WebkitBackdropFilter","transform","perspective","willChange","filter","some","contain","isLayoutViewport","isLastTraversableNode","min","Math","max","round","getBoundingClientRect","includeScale","isFixedStrategy","_win$visualViewport$o","_win$visualViewport","_win$visualViewport$o2","_win$visualViewport2","clientRect","scaleX","scaleY","offsetWidth","width","offsetHeight","height","win","addVisualOffsets","x","left","visualViewport","offsetLeft","y","top","offsetTop","right","bottom","getDocumentElement","documentElement","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getWindowScrollBarX","isScaled","rect","getRectRelativeToOffsetParent","offsetParent","strategy","isOffsetParentAnElement","scroll","offsets","offsetRect","clientLeft","clientTop","getParentNode","result","assignedSlot","parentNode","host","getTrueOffsetParent","position","getContainingBlock","currentNode","getOffsetParent","getDimensions","convertOffsetParentRelativeRectToViewportRelativeRect","_ref","getViewportRect","html","clientWidth","clientHeight","layoutViewport","getDocumentRect","_element$ownerDocumen","body","scrollWidth","scrollHeight","direction","getNearestOverflowAncestor","getOverflowAncestors","list","_node$ownerDocument","scrollableAncestor","isBody","target","concat","updatedList","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","getClippingElementAncestors","el","currentContainingBlockComputedStyle","computedStyle","ancestor","getClippingRect","boundary","rootBoundary","elementClippingAncestors","clippingAncestors","firstClippingAncestor","clippingRect","reduce","accRect","platform","getElementRects","reference","floating","getClientRects","Array","from","isRTL","autoUpdate","update","options","ancestorScroll","_ancestorScroll","ancestorResize","elementResize","animationFrame","ancestors","contextElement","forEach","addEventListener","passive","observer","initialUpdate","ResizeObserver","observe","frameId","prevRefRect","frameLoop","nextRefRect","requestAnimationFrame","_observer","removeEventListener","disconnect","cancelAnimationFrame"],"mappings":"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","sourcesContent":["import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction isWindow(value) {\n  return value && value.document && value.location && value.alert && value.setInterval;\n}\nfunction getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (!isWindow(node)) {\n    const ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}\n\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction getNodeName(node) {\n  return isWindow(node) ? '' : node ? (node.nodeName || '').toLowerCase() : '';\n}\n\nfunction getUAString() {\n  const uaData = navigator.userAgentData;\n\n  if (uaData != null && uaData.brands) {\n    return uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n  }\n\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter; // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some( // TS 4.1 compat\n  value => {\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString()); // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  const clientRect = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scaleX;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scaleY;\n  const width = clientRect.width / scaleX;\n  const height = clientRect.height / scaleY;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\nfunction isScaled(element) {\n  const rect = getBoundingClientRect(element);\n  return round(rect.width) !== element.offsetWidth || round(rect.height) !== element.offsetHeight;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, // @ts-ignore - checked above (TS 4.1 compat)\n  isOffsetParentAnElement && isScaled(offsetParent), strategy === 'fixed');\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n\n  const result = // Step into the shadow DOM of the parent of a slotted node\n  node.assignedSlot || // DOM Element detected\n  node.parentNode || ( // ShadowRoot detected\n  isShadowRoot(node) ? node.host : null) || // Fallback\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n}\n\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to be need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n\n  }\n\n  return { ...rect,\n    x: rect.x - scroll.scrollLeft + offsets.x,\n    y: rect.y - scroll.scrollTop + offsets.y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n\n  if (isLastTraversableNode(parentNode)) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  const target = isBody ? [win].concat(win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []) : scrollableAncestor;\n  const updatedList = list.concat(target);\n  return isBody ? updatedList : // @ts-ignore: isBody tells us target will be an HTMLElement here\n  updatedList.concat(getOverflowAncestors(target));\n}\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, false, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  return {\n    top,\n    left,\n    x: left,\n    y: top,\n    right: left + element.clientWidth,\n    bottom: top + element.clientHeight,\n    width: element.clientWidth,\n    height: element.clientHeight\n  };\n}\n\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping ancestor\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingElementAncestors(element) {\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentNode = element;\n  let currentContainingBlockComputedStyle = null; // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n\n    if (computedStyle.position === 'static' && currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) && !isContainingBlock(currentNode)) {\n      // Drop non-containing blocks\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n\n    currentNode = getParentNode(currentNode);\n  }\n\n  return result;\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\n\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getElementRects: _ref => {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, getOffsetParent(floating), strategy),\n      floating: { ...getDimensions(floating),\n        x: 0,\n        y: 0\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n\n    observer.observe(floating);\n  }\n\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n\n  if (animationFrame) {\n    frameLoop();\n  }\n\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n\n  update();\n  return () => {\n    var _observer;\n\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\nconst computePosition = (reference, floating, options) => computePosition$1(reference, floating, {\n  platform,\n  ...options\n});\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };\n"]},"metadata":{},"sourceType":"module"}